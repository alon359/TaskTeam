{"version":3,"sources":["webpack:///src/app/services/auth.guard.ts","webpack:///src/app/components/rename-project-modal/rename-project-modal.component.ts","webpack:///src/app/components/rename-project-modal/rename-project-modal.component.html","webpack:///src/app/pages/reset-password/reset-password.component.ts","webpack:///src/app/pages/reset-password/reset-password.component.html","webpack:///src/app/components/add-member/add-member.component.ts","webpack:///src/app/components/add-member/add-member.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/pages/forget-password/forget-password.component.ts","webpack:///src/app/pages/forget-password/forget-password.component.html","webpack:///src/app/components/forget-pass-email-card/forget-pass-email-card.component.ts","webpack:///src/app/components/forget-pass-email-card/forget-pass-email-card.component.html","webpack:///src/app/services/resolves/one-project.resolve.service.ts","webpack:///src/app/pages/setting/setting.component.ts","webpack:///src/app/pages/setting/setting.component.html","webpack:///src/app/components/table-invitees-management/table-invitees-management.component.ts","webpack:///src/app/components/table-invitees-management/table-invitees-management.component.html","webpack:///src/app/components/update-password/update-password.component.ts","webpack:///src/app/components/update-password/update-password.component.html","webpack:///src/app/components/img-profile-input/img-profile-input.component.ts","webpack:///src/app/components/img-profile-input/img-profile-input.component.html","webpack:///src/app/components/task-form/task-form.component.ts","webpack:///src/app/components/task-form/task-form.component.html","webpack:///src/app/components/remove-member-modal/remove-member-modal.component.ts","webpack:///src/app/components/remove-member-modal/remove-member-modal.component.html","webpack:///src/app/pages/home-page/home-page.component.ts","webpack:///src/app/pages/home-page/home-page.component.html","webpack:///src/app/components/project-members-modal/project-members-modal.component.ts","webpack:///src/app/components/project-members-modal/project-members-modal.component.html","webpack:///src/app/components/table-tasks/table-tasks.component.ts","webpack:///src/app/components/table-tasks/table-tasks.component.html","webpack:///src/app/pages/create-project/create-project.component.ts","webpack:///src/app/pages/create-project/create-project.component.html","webpack:///src/app/validators/taskDate.validator.ts","webpack:///src/app/components/change-permission-modal/change-permission-modal.component.ts","webpack:///src/app/components/change-permission-modal/change-permission-modal.component.html","webpack:///src/app/components/menu-login/menu-login.component.ts","webpack:///src/app/components/menu-login/menu-login.component.html","webpack:///src/app/pages/one-project/one-project.component.ts","webpack:///src/app/pages/one-project/one-project.component.html","webpack:///src/app/components/delete-project-modal/delete-project-modal.component.ts","webpack:///src/app/components/delete-project-modal/delete-project-modal.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/pages/my-projects/my-projects.component.ts","webpack:///src/app/pages/my-projects/my-projects.component.html","webpack:///src/app/services/member.service.ts","webpack:///src/app/components/add-task-modal/add-task-modal.component.ts","webpack:///src/app/components/add-task-modal/add-task-modal.component.html","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/row-task/row-task.component.ts","webpack:///src/app/components/row-task/row-task.component.html","webpack:///src/app/services/project.service.ts","webpack:///src/app/services/cloudinary.service.ts","webpack:///src/app/components/nav-bar/nav-bar.component.ts","webpack:///src/app/components/nav-bar/nav-bar.component.html","webpack:///src/app/components/forget-pass-email-sended/forget-pass-email-sended.component.ts","webpack:///src/app/components/forget-pass-email-sended/forget-pass-email-sended.component.html","webpack:///src/app/services/task.service.ts","webpack:///src/configs/cloudinary.config.js","webpack:///src/app/components/delete-task-modal/delete-task-modal.component.ts","webpack:///src/app/components/delete-task-modal/delete-task-modal.component.html","webpack:///src/app/components/signin-form/signin-form.component.ts","webpack:///src/app/components/signin-form/signin-form.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/validators/confirmed.validator.ts","webpack:///src/app/services/storage.service.ts","webpack:///src/app/pages/current-tasks/current-tasks.component.ts","webpack:///src/app/pages/current-tasks/current-tasks.component.html","webpack:///src/app/components/project-form/project-form.component.ts","webpack:///src/app/components/project-form/project-form.component.html","webpack:///src/app/pages/sign-up/sign-up.component.ts","webpack:///src/app/pages/sign-up/sign-up.component.html","webpack:///src/app/services/user.service.ts","webpack:///src/app/services/resolves/profile.resolve.service.ts","webpack:///src/app/components/invite-member-modal/invite-member-modal.component.ts","webpack:///src/app/components/invite-member-modal/invite-member-modal.component.html","webpack:///src/app/components/cropper-img/cropper-img.component.ts","webpack:///src/app/components/cropper-img/cropper-img.component.html","webpack:///src/app/pipes/phone.pipe.ts","webpack:///src/app/pages/not-found/not-found.component.ts","webpack:///src/app/pages/not-found/not-found.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/components/project-row/project-row.component.ts","webpack:///src/app/components/project-row/project-row.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/services/httpInterceptor.ts"],"names":["AuthGuard","authService","router","storage","next","state","user","load","navigateByUrl","providedIn","RenameProjectModalComponent","$","modal","closeMoal","selector","templateUrl","styleUrls","ResetPasswordComponent","AddMemberComponent","memberService","projectService","fb","addMemberForm","projectMembers","currentProject","isWasSubmit","isLoading","options","successMsg","errorMsg","emailInputMsg","group","email","required","pattern","permission","projectMembersSub","members$","subscribe","members","reset","currentProjectSub","currentProject$","project","errorMemberSub","errMsg$","errMsg","resetMsgs","param","msg","unsubscribe","status","data","value","projectID","_id","createMember","inputName","controls","errors","onAdd","environment","production","baseUrl","ForgetPasswordComponent","isEmailSended","msgErr","ForgetPassEmailCardComponent","OneProjectResolveService","route","params","getByID","toPromise","console","error","SettingComponent","userService","userLogged","imgUrl","isChangePass","userFrom","msgError","alreadyUseMsg","fName","lName","phone","title","userLoggedSub","loggedUser$","resetForm","errSub","errUser$","err","removeClass","successMsgSub","successMsg$","res","setTimeout","dataForm","update","setValue","onSubmit","onGotImgUrl","TableInviteesManagementComponent","loggedUser","projerctSub","loadProjectMembers","pipe","MemberID","removeMember","UpdatePasswordComponent","passwordForm","incorrectPassMsg","oldPass","newPass","minLength","confirmPass","validator","errMsgPassSub","updatePassword","onChange","ImgProfileInputComponent","passImgUrl","urlImg","selectedFile","preImg","imgName","event","files","target","length","file","name","reader","FileReader","readAsDataURL","onload","result","emit","onFileSelected","TaskFormComponent","taskService","task","taskMsg","createTask","description","priority","startDate","Date","toISOString","substr","endDate","owner","membersSub","taskSub","currentTask$","currentTask","patchValue","projectSub","taskMsgSub","taskMsg$","log","create","property","fc","setCurrentTask","onCreate","RemoveMemberModalComponent","succMsgSub","errMsgSub","member","onClose","HomePageComponent","elementRef","loadUsers","subscription","users$","users","ProjectMembersModalComponent","projcetMemberEmitter","userMember","userMemberSub","userMember$","memberID","TableTasksComponent","tasks","CreateProjectComponent","createdProject","setCurrentProject","createdProjectSub","errorMsgSub","slideUp","slideDown","TaskDateValidator","start","end","formGroup","startTimeStamp","endTimeStamp","setErrors","dateValidator","ChangePermissionModalComponent","selectOption","changes","firstChange","currentValue","updateMember","MenuLoginComponent","logout","navigate","onLogout","OneProjectComponent","snapshot","_projectInitialize","bind","tasksSub","tasks$","projectTasks","_showMessage","projectMember","getProjectMemberById","saveUserMember","loadTasks","alert","setProjectMember","DeleteProjectModalComponent","inputProjectName","isBtnDelDisabled","successSub","success","removeProject","onInputChage","onDelete","AppComponent","pageName","MyProjectsComponent","dataProjects","loadUserProjects","dataProjectsSub","projects$","projects","forEach","getTasksProjectCount","countTasks","push","doneTasks","precent","toFixed","MemberService","http","auth","BASE_URL","endpoint","_members$","asObservable","_userMember$","getMembers","filter","get","post","createdMember","Array","isArray","put","memberUpdated","map","find","userID","AddTaskModalComponent","ProfileComponent","location","userProfile","back","onBack","AppModule","provide","useClass","multi","declarations","imports","providers","bootstrap","RowTaskComponent","updateTask","taskToUpdate","Object","assign","statusTask","priorityTask","onRemoveTask","onEditTask","onStatusChange","onPriorityChange","ProjectService","_projects$","_currentProject$","projectToUpdate","updatedProject","CloudinaryService","UPLOAD_URL","UPLOAD_PRESET","formData","FormData","append","reportProgress","observe","NavBarComponent","ForgetPassEmailSendedComponent","TaskService","_tasks$","_currentTask$","taskErr$","createdTask","taskID","updatedTask","cloudinaryConfig","CLOUD_NAME","DeleteTaskModalComponent","errorSub","remove","removeTask","SigninFormComponent","userLoggedIn","logIn","password","loggedSub","errAuth$","login","onLogin","AuthService","key","END_POINT","_loggedUser$","_loadLoggedUser","withCredentials","store","userUpdate","ConfirmedValidator","controlName","matchingControlName","control","matchingControl","confirmedValidator","StorageService","localStorage","setItem","JSON","stringify","getItem","parse","undefined","removeItem","CurrentTasksComponent","isCollapse","mapTasks","mapsTasks","projectsWithTasks","projectName","idTable","tableEl","document","querySelector","scrollIntoView","block","behavior","inline","ProjectFormComponent","closeModalEv","projectFrom","isUpdating","createProject","currProject","updateProject","SignUpComponent","signUp","emailUseMsg","onSignUp","passconfrim","UserService","_users$","userUpdated","updateUserLogged","patch","ProfileResolveService","InviteMemberModalComponent","CropperImgComponent","cloudinary","progressUpload","isUpload","imageDestination","createCropper","progressLoadSub","uploadImg","type","UploadProgress","Math","round","loaded","total","Response","body","url","cropper","imageElement","nativeElement","zoomable","scalable","aspectRatio","crop","canvas","getCroppedCanvas","width","height","minWidth","minHeight","maxWidth","maxHeight","imageSmoothingEnabled","imageSmoothingQuality","toDataURL","onUpload","$event","preventDefault","PhonePipe","phoneNum","secondChar","charAt","formatPhone","NotFoundComponent","routes","path","pathMatch","component","canActivate","resolve","AppRoutingModule","forRoot","exports","ProjectRowComponent","bootstrapModule","webpackEmptyAsyncContext","req","Promise","then","e","Error","code","keys","module","id","CustomInterceptor","request","handle","copiedReq","clone"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\nimport { StorageService } from './storage.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authService: AuthService, private router: Router, private storage: StorageService) { }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    const user = this.storage.load('user');\r\n    // tslint:disable-next-line: curly\r\n    if (user) return true;\r\n    this.router.navigateByUrl('/');\r\n    return false;\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\ndeclare var $: any\n// Models\nimport { Project } from 'src/app/models/project.model';\n\n\n@Component({\n  selector: 'app-rename-project-modal',\n  templateUrl: './rename-project-modal.component.html',\n  styleUrls: ['./rename-project-modal.component.css']\n})\nexport class RenameProjectModalComponent implements OnInit {\n  @Input() project: Project;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  closeMoal() {\n    $('#renmaeProjectMoadl').modal('hide');\n  }\n}\n","<div class=\"modal fade\" id=\"renmaeProjectMoadl\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Rename project</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <app-project-form [project]=\"project\" (closeModalEv)=\"closeMoal()\"></app-project-form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"layout-main\">\r\n  <app-menu-login></app-menu-login>\r\n  <div class=\"main-contain\">\r\n\r\n    <div class=\"container\">\r\n      <h1 class=\"h1\">Reset Password</h1>\r\n      <div class=\"card text-center\">\r\n        <div class=\"card-header\">\r\n          <h2 class=\"card-title\">Enter new password for your account</h2>\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <form>\r\n            <div class=\"form-group\">\r\n              <label for=\"newPass\">New password</label>\r\n              <input type=\"text\" id=\"newPass\" class=\"form-control\" placeholder=\"Enter new password\">\r\n            </div>\r\n\r\n            <div class=\"form-group\">\r\n              <label for=\"confrimPass\">Confirm password</label>\r\n              <input type=\"text\" id=\"confrimPass\" class=\"form-control\" placeholder=\"Enter password again\">\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n// Models\r\nimport { Member } from 'src/app/models/member.model';\r\nimport { Project } from 'src/app/models/project.model';\r\n// Services\r\nimport { MemberService } from 'src/app/services/member.service';\r\nimport { ProjectService } from 'src/app/services/project.service';\r\n\r\n@Component({\r\n  selector: 'app-add-member',\r\n  templateUrl: './add-member.component.html',\r\n  styleUrls: ['./add-member.component.css']\r\n})\r\nexport class AddMemberComponent implements OnInit, OnDestroy {\r\n  addMemberForm: FormGroup = new FormGroup({});\r\n\r\n  projectMembers: Member[] = [];\r\n  currentProject: Project = null;\r\n\r\n  isWasSubmit = false;\r\n  isLoading = false;\r\n\r\n  //  Permission options\r\n  options = ['Normal', 'Admin'];\r\n\r\n  // Massages\r\n  successMsg: string = null;\r\n  errorMsg: string = null;\r\n  emailInputMsg: string = null;\r\n\r\n  // Subscriptions\r\n  projectMembersSub: Subscription;\r\n  currentProjectSub: Subscription;\r\n  errorMemberSub: Subscription;\r\n\r\n  constructor(\r\n    private memberService: MemberService,\r\n    private projectService: ProjectService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    this.addMemberForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-zA-Z][a-zA-Z0-9-_]+@[a-zA-Z]+(\\\\.[a-zA-Z]{2,3})+$')]],\r\n      permission: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    // Members listener\r\n    this.projectMembersSub = this.memberService.members$.subscribe(\r\n      members => {\r\n        this.projectMembers = members\r\n        if (this.isLoading) {\r\n          this.isLoading = false;\r\n          this.isWasSubmit = false;\r\n          this.successMsg = 'A new member added to the project';\r\n          this.addMemberForm.reset();\r\n        }\r\n      });\r\n\r\n    // Current project user listener\r\n    this.currentProjectSub = this.projectService.currentProject$.subscribe\r\n      (project => {\r\n        this.currentProject = project;\r\n      })\r\n\r\n    // Error \"MemberService\" listener\r\n    this.errorMemberSub = this.memberService.errMsg$.subscribe(\r\n      errMsg => {\r\n        this.resetMsgs();\r\n        this.isLoading = false;\r\n        if (errMsg.param == 'email') {\r\n          this.emailInputMsg = errMsg.msg;\r\n        } else {\r\n          this.errorMsg = errMsg.msg;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.projectMembersSub.unsubscribe();\r\n    this.currentProjectSub.unsubscribe();\r\n    this.errorMemberSub.unsubscribe();\r\n  }\r\n\r\n  get fc() { return this.addMemberForm.controls; }\r\n\r\n\r\n  onAdd() {\r\n    // Reset massages\r\n    this.resetMsgs();\r\n\r\n    this.isWasSubmit = true;\r\n\r\n    if (this.addMemberForm.status == 'VALID') {\r\n      this.isLoading = true;\r\n      const data = this.addMemberForm.value;\r\n      data.projectID = this.currentProject._id;\r\n      this.memberService.createMember(data);\r\n    }\r\n  }\r\n\r\n\r\n  GetValidationClass(inputName: string) {\r\n    if (!this.isWasSubmit) {\r\n      return '';\r\n    } else if (this.addMemberForm.controls[inputName].errors) {\r\n      return 'is-invalid';\r\n    } else {\r\n      return 'is-valid';\r\n    }\r\n  }\r\n\r\n  resetMsgs() {\r\n    this.emailInputMsg = null;\r\n    this.successMsg = null;\r\n    this.errorMsg = null;\r\n  }\r\n}\r\n","<section>\r\n  <!-- Massages -->\r\n  <div>\r\n    <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{errorMsg}}</div>\r\n    <div *ngIf=\"successMsg\" class=\"alert alert-success\" role=\"alert\">{{successMsg}}</div>\r\n  </div>\r\n\r\n  <!-- Add members form -->\r\n  <form #addForm [formGroup]=\"addMemberForm\" (ngSubmit)=onAdd()>\r\n    <!-- Email member -->\r\n    <div class=\"form-group\">\r\n      <label for=\"memberMail\">Enter member email:</label>\r\n      <input type=\"email\" id=\"memberMail\" class=\"form-control\" placeholder=\"example@mail.com\" formControlName=\"email\"\r\n        [ngClass]=\"GetValidationClass('email')\" [class.is-invalid]=\"emailInputMsg\">\r\n      <!-- Invalid massage -->\r\n      <div class=\"invalid-feedback\">\r\n        <p *ngIf=\"fc.email.errors\">Please enter valid email address.</p>\r\n        <p *ngIf=\"emailInputMsg\">{{emailInputMsg}}</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Permission -->\r\n    <div class=\"form-group\">\r\n      <label for=\"Permission\">Permission member:</label>\r\n      <select class=\"custom-select\" formControlName=\"permission\" [ngClass]=\"GetValidationClass('permission')\">\r\n        <option disabled selected value=\"\">Choose a permission</option>\r\n        <option *ngFor=\"let option of options\" [ngValue]=\"option.toLowerCase()\">{{option}}</option>\r\n        <!-- <option value=\"3\">View only</option> -->\r\n      </select>\r\n      <!-- Invalid massage -->\r\n      <div class=\"invalid-feedback\">\r\n        <p *ngIf=\"fc.permission.errors\">Please choose a permission.</p>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <button class=\"btn btn-outline-primary mt-1\" type=\"submit\" [disabled]=\"isLoading\">\r\n        <div *ngIf=\"isLoading;else add\">\r\n          <div class=\"spinner-border spinner-border-sm text-primary mr-1\" role=\"status\"></div>\r\n          <span>Loading...</span>\r\n        </div>\r\n        <ng-template #add>Add member</ng-template>\r\n      </button>\r\n    </div>\r\n    \r\n  </form>\r\n</section>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: '//localhost:3030/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n  isLoading = false;\r\n  isEmailSended = false;\r\n  msgErr = 'Error! sorry';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"layout-main\">\r\n\r\n  <app-menu-login></app-menu-login>\r\n\r\n  <div class=\"main-contain p-2\">\r\n    <h1>Forget your password?</h1>\r\n\r\n    <!-- Enter email address card -->\r\n    <app-forget-pass-email-card *ngIf=\"!isEmailSended\" [isLoading]=\"isLoading\" [isEmailSended]=\"isEmailSended\"\r\n      [msgErr]=\"msgErr\">\r\n    </app-forget-pass-email-card>\r\n\r\n    <!-- Email sended card -->\r\n    <app-forget-pass-email-sended *ngIf=\"isEmailSended\"></app-forget-pass-email-sended>\r\n\r\n  </div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forget-pass-email-card',\r\n  templateUrl: './forget-pass-email-card.component.html',\r\n  styleUrls: ['./forget-pass-email-card.component.css']\r\n})\r\nexport class ForgetPassEmailCardComponent implements OnInit {\r\n  @Input() isLoading: boolean;\r\n  @Input() msgErr: string;\r\n  @Input() isEmailSended: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"forget-contain card bg-light\">\r\n\r\n  <header class=\"header-forget card-header\">\r\n    <span class=\"icon-lock\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 23 32\">\r\n        <path fill=\"currentColor\"\r\n          d=\"M19.65,14.425 L19.65,8.125 C19.65,3.782725 16.1157,0.25 11.775,0.25 C7.43115,0.25 3.9,3.782725 3.9,8.125 L3.9,14.425 C2.162775,14.425 0.75,15.8362 0.75,17.575 L0.75,28.6 C0.75,30.337225 2.162775,31.75 3.9,31.75 L19.65,31.75 C21.387225,31.75 22.8,30.337225 22.8,28.6 L22.8,17.575 C22.8,15.8362 21.387225,14.425 19.65,14.425 Z M11.775,25.45 C10.4709,25.45 9.4125,24.3916 9.4125,23.0875 C9.4125,21.7834 10.4709,20.725 11.775,20.725 C13.0791,20.725 14.1375,21.7834 14.1375,23.0875 C14.1375,24.3916 13.0791,25.45 11.775,25.45 Z M16.5,14.425 L7.05,14.425 L7.05,8.125 C7.05,5.51995 9.16995,3.4 11.775,3.4 C14.38005,3.4 16.5,5.51995 16.5,8.125 L16.5,14.425 Z\">\r\n        </path>\r\n      </svg>\r\n    </span>\r\n    <span class=\"header-text\">\r\n      Enter your email address and we'll send you a link to reset your password.\r\n    </span>\r\n  </header>\r\n\r\n  <main class=\"main-forget card-body\">\r\n    <div *ngIf=\"msgErr\" class=\"alert alert-danger\">{{msgErr}}</div>\r\n    <form>\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email address</label>\r\n        <input class=\"form-control\" type=\"email\" id=\"email\" name=\"email\" placeholder=\"e.g email@domain.com\">\r\n      </div>\r\n      <button class=\"btn btn-success btn-block\" type=\"submit\" [disabled]=\"isLoading\">\r\n        <span *ngIf=\"!isLoading\">\r\n          Reset password\r\n        </span>\r\n        <span *ngIf=\"isLoading\">\r\n          <div class=\"spinner-border spinner-border-sm\" role=\"status\"></div>\r\n          <span> Loading...</span>\r\n        </span>\r\n      </button>\r\n    </form>\r\n  </main>\r\n\r\n  <footer class=\"footer-forget card-footer\">\r\n    <p class=\"mr-2\">Don't have an account?</p>\r\n    <a class=\"btn btn-link\" href=\"/signup\">Create free now!</a>\r\n  </footer>\r\n\r\n</section>\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\nimport { ProjectService } from '../project.service';\r\nimport { MemberService } from '../member.service';\r\nimport { Project } from 'src/app/models/project.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OneProjectResolveService implements Resolve<any>{\r\n\r\n  constructor(private projectService: ProjectService, private router: Router) { }\r\n\r\n  async resolve(route: ActivatedRouteSnapshot) {\r\n    const { projectID } = route.params;\r\n\r\n    if (!projectID) {\r\n      this.router.navigateByUrl('/notfound');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const project: Project = await (await this.projectService.getByID(projectID)).toPromise();\r\n      if (!project) this.router.navigateByUrl('/notfound');\r\n\r\n      return project;\r\n    } catch (err) {\r\n      console.error(err);\r\n      this.router.navigateByUrl('/notfound');\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n// Services\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\n// Models\r\nimport { User } from 'src/app/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-setting',\r\n  templateUrl: './setting.component.html',\r\n  styleUrls: ['./setting.component.css']\r\n})\r\nexport class SettingComponent implements OnInit, OnDestroy {\r\n  userLogged: User = null;\r\n  imgUrl: string = null;\r\n\r\n  isLoading = false;\r\n  isWasSubmit = false;\r\n  isChangePass = false;\r\n\r\n  // Subscriptions\r\n  userLoggedSub: Subscription;\r\n  successMsgSub: Subscription;\r\n  errSub: Subscription;\r\n  errMsgPassSub: Subscription;\r\n\r\n  // From groups\r\n  userFrom = new FormGroup({});\r\n\r\n  // From massages\r\n  msgError: string = null;\r\n  successMsg: string = null;\r\n  alreadyUseMsg: string = null;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n  ) {\r\n    this.userFrom = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email,\r\n      Validators.pattern('^[a-zA-Z][a-zA-Z0-9-_]+@[a-zA-Z]+(\\\\.[a-zA-Z]{2,3})+$')]],\r\n      fName: ['', [Validators.required, Validators.pattern('^[A-Z][a-z]+$')]],\r\n      lName: ['', [Validators.required, Validators.pattern('^[A-Z][a-z]+\\( [A-Z][a-z]+\\)*$')]],\r\n      phone: ['', [Validators.required, Validators.pattern('^0[1-9][0-9]{7,8}$')]],\r\n      title: ['', [Validators.required, Validators.pattern('( |[0-9]|[a-zA-Z]|-)+')]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userLoggedSub = this.authService.loggedUser$.subscribe(\r\n      user => {\r\n        this.userLogged = user;\r\n        this.resetForm();\r\n      });\r\n\r\n    this.errSub = this.userService.errUser$.subscribe(\r\n      err => {\r\n        // tslint:disable-next-line: curly\r\n        if (this.successMsg) this.successMsg = null;\r\n\r\n        if (err.param === 'email') {\r\n          this.alreadyUseMsg = err.msg;\r\n        } else if (err.param !== 'oldPass') {\r\n          $('.collapse').removeClass('show');\r\n          this.msgError = err.msg;\r\n        }\r\n        this.isLoading = false;\r\n      });\r\n\r\n    this.successMsgSub = this.userService.successMsg$.subscribe(\r\n      res => {\r\n        // tslint:disable-next-line: curly\r\n        if (this.msgError) this.msgError = null;\r\n\r\n        this.successMsg = res.msg;\r\n        if (res.param === 'update') {\r\n          setTimeout(() => {\r\n            this.router.navigateByUrl('/profile/' + this.userLogged._id);\r\n          }, 1000);\r\n        } else {\r\n          $('.collapse').removeClass('show');\r\n          this.isChangePass = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.userLoggedSub.unsubscribe();\r\n    this.successMsgSub.unsubscribe();\r\n  }\r\n\r\n  onGotImgUrl(imgUrl: string) {\r\n    this.imgUrl = imgUrl;\r\n    $('.collapse').removeClass('show');\r\n  }\r\n\r\n  get fc() {\r\n    return this.userFrom.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.msgError) {\r\n      this.msgError = null;\r\n    }\r\n    if (this.alreadyUseMsg) {\r\n      this.alreadyUseMsg = null;\r\n    }\r\n\r\n    if (this.userFrom.status === 'VALID') {\r\n      this.isLoading = true;\r\n      const dataForm: User = this.userFrom.value;\r\n      dataForm._id = this.userLogged._id;\r\n      dataForm.imgUrl = this.imgUrl;\r\n      this.userService.update(dataForm);\r\n    } else {\r\n      this.isWasSubmit = true;\r\n    }\r\n  }\r\n\r\n  GetValidationClass(inputName: string) {\r\n    if (!this.isWasSubmit) {\r\n      return '';\r\n    } else if (this.userFrom.controls[inputName].errors) {\r\n      return 'is-invalid';\r\n    } else {\r\n      return 'is-valid';\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.userFrom.setValue({\r\n      email: this.userLogged.email,\r\n      fName: this.userLogged.fName,\r\n      lName: this.userLogged.lName,\r\n      phone: this.userLogged.phone,\r\n      title: this.userLogged.title,\r\n    });\r\n    this.imgUrl = this.userLogged.imgUrl;\r\n  }\r\n\r\n}\r\n","<div class=\"layout-main\">\r\n  <app-menu-login></app-menu-login>\r\n  <div class=\"container\">\r\n    <h1>Setting</h1>\r\n    <!-- If have unknown error -->\r\n    <div *ngIf=\"msgError\" class=\"alert alert-danger\">{{msgError}}</div>\r\n    <!-- Success update user details massage -->\r\n    <div *ngIf=\"successMsg\" class=\"alert alert-success\">{{successMsg}}</div>\r\n\r\n    <form class=\"mb-3\" [formGroup]=\"userFrom\" (ngSubmit)=\"onSubmit()\">\r\n      <!-- Image profile -->\r\n      <div class=\"form-group\">\r\n        <button class=\"btn-profile-img\" type=\"button\" data-toggle=\"collapse\" data-target=\"#imgProfileInput\">\r\n          <img [src]=\" imgUrl? imgUrl: '../../../assets/addImg.jpg'\" alt=\"Avatar\" />\r\n        </button>\r\n        <div class=\"collapse mt-2\" id=\"imgProfileInput\">\r\n          <app-img-profile-input (passImgUrl)=\"onGotImgUrl($event)\"></app-img-profile-input>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Change password -->\r\n      <div>\r\n        <button class=\"btn btn-primary mb-3\" type=\"button\" data-toggle=\"collapse\" data-target=\"#passForm\"\r\n          (click)=\"isChangePass=!isChangePass\">Change\r\n          password</button>\r\n        <div class=\"collapse my-2\" id=\"passForm\" *ngIf=\"isChangePass\" app-update-password></div>\r\n      </div>\r\n\r\n      <!-- First name -->\r\n      <div class=\"row\">\r\n        <div class=\"form-group col\">\r\n          <label for=\"firstName\">First name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"firstName\" formControlName=\"fName\"\r\n            [ngClass]=\"GetValidationClass('fName')\" placeholder=\"Your first name\" required>\r\n\r\n          <div class=\"invalid-feedback\">\r\n            <div *ngIf=\"fc.fName.errors?.required\">Please enter a first name</div>\r\n            <div *ngIf=\"fc.fName.errors?.pattern\">\r\n              A first name should have a capital letter at the beginning and only with letters\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group col\">\r\n          <label for=\"lastName\">Last name</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"lastName\" formControlName=\"lName\"\r\n            [ngClass]=\"GetValidationClass('lName')\" placeholder=\"Your last name\" required />\r\n\r\n          <div class=\"invalid-feedback\">\r\n            <div *ngIf=\"fc.lName.errors?.required\">Please enter a last name</div>\r\n            <div *ngIf=\"fc.lName.errors?.pattern\">\r\n              A last name should have a capital letter at the beginning of a name and only with letters and spaces\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Last name -->\r\n      <div class=\"form-group\">\r\n        <label for=\"title\">Title</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"title\" formControlName=\"title\"\r\n          [ngClass]=\"GetValidationClass('title')\" placeholder=\"What is your job?\" required>\r\n\r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"fc.title.errors?.required\"> Please write what is your job</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Number phone -->\r\n      <div class=\"form-group\">\r\n        <label for=\"phone\">Phone number</label>\r\n        <input type=\"text\" class=\"form-control\" id=\"phone\" formControlName=\"phone\"\r\n          [ngClass]=\"GetValidationClass('phone')\" placeholder=\"Enter your call number\" required>\r\n\r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"fc.phone.errors?.required\"> Please enter an number phone</div>\r\n          <div *ngIf=\"fc.phone.errors?.pattern\">Please enter a valid Number phone. Example\r\n            0XXX XXX XXX</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Email -->\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" class=\"form-control\" [ngClass]=\"GetValidationClass('email')\"\r\n          formControlName=\"email\" [class.is-invalid]=\"alreadyUseMsg\" placeholder=\"Enter your email\" required>\r\n\r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"fc.email.errors?.required\"> Please enter an email</div>\r\n          <div *ngIf=\"fc.email.errors?.email || fc.email.errors?.pattern\">Please enter a valid email. Example\r\n            example@mail.com</div>\r\n          <div *ngIf=\"alreadyUseMsg\">{{alreadyUseMsg}}</div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Buttons panel -->\r\n      <div class=\"row\">\r\n        <!-- Submit button -->\r\n        <div class=\"col-2\">\r\n          <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"isLoading\">\r\n            <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n\r\n            <span *ngIf=\"!isLoading; else loading\">Submit</span>\r\n            <ng-template #loading> Loading...</ng-template>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Cancel button -->\r\n        <div class=\"col\">\r\n          <a class=\"btn btn-danger\" [href]=\"'/profile/'+ userLogged._id\">Cancel</a>\r\n        </div>\r\n\r\n        <!-- Reset form button -->\r\n        <div class=\"col\">\r\n          <button type=\"button\" class=\"btn btn-warning\" (click)=\"resetForm()\" [disabled]=\"isLoading\">Reset form</button>\r\n        </div>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\n// Services\r\nimport { MemberService } from 'src/app/services/member.service';\r\nimport { ProjectService } from 'src/app/services/project.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n// Models\r\nimport { Member } from 'src/app/models/member.model';\r\nimport { User } from 'src/app/models/user.model';\r\n\r\n@Component({\r\n  selector: 'app-table-invitees-management',\r\n  templateUrl: './table-invitees-management.component.html',\r\n  styleUrls: ['./table-invitees-management.component.css']\r\n})\r\nexport class TableInviteesManagementComponent implements OnInit, OnDestroy {\r\n  project = null;\r\n  loggedUser: User = null;\r\n\r\n\r\n  projectMembers: Member[] = [];\r\n\r\n  // Subscriptions\r\n  projectMembersSub: Subscription;\r\n  projerctSub: Subscription;\r\n\r\n  constructor(\r\n    private memberService: MemberService,\r\n    private projectService: ProjectService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.projerctSub = this.projectService.currentProject$.subscribe(\r\n      project => {\r\n        if (project) {\r\n          this.project = project;\r\n          this.memberService.loadProjectMembers(project._id);\r\n        }\r\n      });\r\n\r\n    // Members listener\r\n    this.projectMembersSub = this.memberService.members$.subscribe(members => { this.projectMembers = members });\r\n\r\n    // Get user-logged\r\n    this.authService.loggedUser$.pipe(take(1)).subscribe(user => { this.loggedUser = user });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.projectMembersSub.unsubscribe();\r\n    this.projerctSub.unsubscribe();\r\n  }\r\n\r\n  onCancel(MemberID: Member['_id']) {\r\n    this.memberService.removeMember(MemberID)\r\n  }\r\n}\r\n","<section class=\"table-responsive-lg\">\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Email</th>\r\n        <th>promission</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor=\"let member of projectMembers\">\r\n        <td class=\"text-left\">\r\n          <img class=\"mr-1\"[src]=\"member.userID.imgUrl || './assets/user.jpg'\" />\r\n          {{member.userID.fName }} {{member.userID.lName }}\r\n        </td>\r\n        <td>{{member.userID.email }}</td>\r\n        <td class=\"permission\">\r\n          {{member.permission}}\r\n        </td>\r\n    </tbody>\r\n  </table>\r\n</section>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n// Services\r\nimport { UserService } from 'src/app/services/user.service';\r\n// Validators\r\nimport { ConfirmedValidator } from 'src/app/validators/confirmed.validator';\r\n\r\n@Component({\r\n  selector: '[app-update-password]',\r\n  templateUrl: './update-password.component.html',\r\n  styleUrls: ['./update-password.component.css']\r\n})\r\nexport class UpdatePasswordComponent implements OnInit, OnDestroy {\r\n  passwordForm = new FormGroup({});\r\n\r\n  isLoading = false;\r\n  isWasSubmit = false;\r\n\r\n  incorrectPassMsg: string = null;\r\n\r\n  errMsgPassSub: Subscription;\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService) {\r\n    this.passwordForm = this.fb.group({\r\n      oldPass: ['', [Validators.required]],\r\n      newPass: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPass: ['', [Validators.required]]\r\n    }, {\r\n      validator: ConfirmedValidator('newPass', 'confirmPass'),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.errMsgPassSub = this.userService.errUser$.subscribe(\r\n      err => {\r\n        // tslint:disable-next-line: triple-equals\r\n        if (err.param == 'oldPass') {\r\n          this.incorrectPassMsg = 'Incorrect password, please check and try again';\r\n          this.isLoading = false;\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    this.errMsgPassSub.unsubscribe();\r\n  }\r\n\r\n  onChange() {\r\n    this.isWasSubmit = true;\r\n\r\n    if (this.passwordForm.status === 'VALID') {\r\n      this.isLoading = true;\r\n      const { oldPass, newPass, confirmPass } = this.passwordForm.value;\r\n      this.userService.updatePassword(oldPass, newPass, confirmPass);\r\n    }\r\n  }\r\n\r\n  get fc() { return this.passwordForm.controls; }\r\n\r\n  GetValidationClass(inputName: string): string {\r\n    if (!this.isWasSubmit) {\r\n      return '';\r\n    } else if (this.passwordForm.controls[inputName].errors) {\r\n      return 'is-invalid';\r\n    } else {\r\n      return 'is-valid';\r\n    }\r\n  }\r\n}\r\n","<form [formGroup]=\"passwordForm\" (ngSubmit)=\"onChange()\">\r\n  <fieldset class=\"p-2\">\r\n    <legend>Change password</legend>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"oldPass\">Your old password</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"oldPass\" placeholder=\"Enter your password\"\r\n        formControlName=\"oldPass\" [ngClass]=\"GetValidationClass('oldPass')\" [class.is-invalid]=\"incorrectPassMsg\">\r\n\r\n      <div class=\" invalid-feedback\">\r\n        <div *ngIf=\"fc.oldPass.errors?.required\">Your password is required</div>\r\n        <div *ngIf=\"incorrectPassMsg\">{{incorrectPassMsg}}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"newPass\">Password</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"newPass\" placeholder=\"Enter new password\"\r\n        formControlName=\"newPass\" [ngClass]=\"GetValidationClass('newPass')\">\r\n\r\n      <div class=\"invalid-feedback\">\r\n        <div *ngIf=\"fc.newPass.errors?.required\"> Please enter new password </div>\r\n        <div *ngIf=\"fc.newPass.errors?.minlength\">Password must be at least 8 characters long</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"confirmPass\">Password confirm</label>\r\n      <input type=\"password\" class=\"form-control\" id=\"confirmPass\" placeholder=\"Enter again new password\"\r\n        formControlName=\"confirmPass\" [ngClass]=\"GetValidationClass('confirmPass')\">\r\n\r\n      <div class=\"invalid-feedback\">\r\n        <div *ngIf=\"fc.confirmPass.errors?.required\"> Please enter new password again </div>\r\n        <div *ngIf=\"fc.confirmPass.errors?.confirmedValidator\"> Passwords must be match</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div>\r\n      <button class=\"btn btn-success\" type=\"submit\" [disabled]=\"isLoading\">\r\n        <span *ngIf=\"!isLoading\">Change</span>\r\n        <span *ngIf=\"isLoading\">\r\n          <div class=\"spinner-border spinner-border-sm\" role=\"status\"></div>\r\n          <span> Loading...</span>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  </fieldset>\r\n</form>\r\n","import { Component, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-img-profile-input',\r\n  templateUrl: './img-profile-input.component.html',\r\n  styleUrls: ['./img-profile-input.component.css']\r\n})\r\nexport class ImgProfileInputComponent {\r\n  @Output() passImgUrl: EventEmitter<string> = new EventEmitter();\r\n\r\n  urlImg: string = null;\r\n  selectedFile = null;\r\n  preImg = null;\r\n\r\n  // For input file label\r\n  imgName = null;\r\n\r\n  constructor() { }\r\n\r\n  onFileSelected(event) {\r\n    const { files } = event.target;\r\n    // tslint:disable-next-line: curly\r\n    if (!files.length) return;\r\n\r\n    // For render component \"cropper-img\"\r\n    this.preImg = null;\r\n\r\n    const file = files[0];\r\n    this.selectedFile = file;\r\n\r\n    // For Update Label input file\r\n    this.imgName = file.name;\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => { this.preImg = reader.result; };\r\n  }\r\n\r\n  OnPassImgUrl(urlImg: string) {\r\n    this.urlImg = urlImg;\r\n    this.passImgUrl.emit(urlImg);\r\n  }\r\n}\r\n","<form>\r\n  <div class=\"custom-file\">\r\n    <input type=\"file\" class=\"custom-file-input\" id=\"customFileLangHTML\" (change)=\"onFileSelected($event)\"\r\n      accept=\"image/*\">\r\n    <label class=\"custom-file-label\" for=\"customFileLangHTML\" data-browse=\"Choose image\">\r\n      <span *ngIf=\"!preImg\">Choose image profile</span>\r\n      <span *ngIf=\"preImg\">{{imgName}}</span>\r\n    </label>\r\n  </div>\r\n  <div class=\"mt-3\">\r\n    <app-cropper-img *ngIf=\"preImg\" [src]=\"preImg\" (passImgUrl)=\"OnPassImgUrl($event)\"></app-cropper-img>\r\n  </div>\r\n</form>\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n// Models\r\nimport { Member } from 'src/app/models/member.model';\r\nimport { Project } from 'src/app/models/project.model';\r\nimport { Task } from 'src/app/models/task.model';\r\n// Services\r\nimport { MemberService } from 'src/app/services/member.service';\r\nimport { ProjectService } from 'src/app/services/project.service';\r\nimport { TaskService } from 'src/app/services/task.service';\r\n// Validators\r\nimport { TaskDateValidator } from 'src/app/validators/taskDate.validator';\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-task-form',\r\n  templateUrl: './task-form.component.html',\r\n  styleUrls: ['./task-form.component.css']\r\n})\r\nexport class TaskFormComponent implements OnInit, OnDestroy {\r\n  @Input() task: Task = null;\r\n\r\n  members: Member[];\r\n  currentProject: Project = null;\r\n\r\n  taskMsg: string = null;\r\n  errMsg: string = null;\r\n\r\n  isLoading = false;\r\n  isWasSubmit = false;\r\n\r\n  // Form group\r\n  createTask = new FormGroup({});\r\n\r\n  // Subscriptions\r\n  membersSub: Subscription;\r\n  projectSub: Subscription;\r\n  taskMsgSub: Subscription;\r\n  taskSub: Subscription;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private taskService: TaskService,\r\n    private memberService: MemberService,\r\n    private projectService: ProjectService\r\n  ) {\r\n    this.createTask = this.fb.group({\r\n      title: ['', Validators.required],\r\n      description: [''],\r\n      priority: ['', Validators.required],\r\n      startDate: [new Date().toISOString().substr(0, 10), Validators.required],\r\n      endDate: [new Date().toISOString().substr(0, 10), Validators.required],\r\n      owner: ['']\r\n    }, {\r\n      validator: TaskDateValidator('startDate', 'endDate'),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Get members project\r\n    this.membersSub = this.memberService.members$.subscribe(\r\n      members => { this.members = members });\r\n\r\n    // Get current task to edit (If have...)\r\n    this.taskSub = this.taskService.currentTask$.subscribe(\r\n      currentTask => {\r\n        this.task = currentTask;\r\n        if (currentTask) {\r\n          const { title, description, priority, startDate, endDate, owner } = currentTask;\r\n          this.createTask.patchValue({\r\n            title,\r\n            description,\r\n            priority,\r\n            startDate: new Date(startDate).toISOString().substr(0, 10),\r\n            endDate: new Date(endDate).toISOString().substr(0, 10),\r\n            owner: owner._id\r\n          })\r\n        }\r\n      });\r\n\r\n    // Get project user\r\n    this.projectSub = this.projectService.currentProject$.subscribe(\r\n      project => { this.currentProject = project });\r\n\r\n    this.taskMsgSub = this.taskService.taskMsg$.subscribe(() => { this.resetForm() });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.membersSub.unsubscribe();\r\n    this.taskSub.unsubscribe();\r\n    this.projectSub.unsubscribe();\r\n    this.taskMsgSub.unsubscribe();\r\n  }\r\n\r\n  get fc() {\r\n    return this.createTask.controls;\r\n  }\r\n\r\n  onCreate() {\r\n    this.isWasSubmit = true;\r\n    if (this.createTask.status === 'VALID') {\r\n      this.isLoading = true;\r\n\r\n      const data = this.createTask.value;\r\n      console.log({ data });\r\n\r\n      if (!this.task) { // If is new-task \r\n        data.projectID = this.currentProject._id;\r\n        this.taskService.create(data);\r\n      } else { // Do update\r\n        for (const property in data) {\r\n          this.task[property] = data[property];\r\n        }\r\n        this.taskService.update(this.task);\r\n      }\r\n    }\r\n  }\r\n\r\n  GetValidationClass(inputName: string): string {\r\n    if (!this.isWasSubmit) {\r\n      return '';\r\n    } else if (this.fc[inputName].errors || this.errMsg) {\r\n      return 'is-invalid';\r\n    } else {\r\n      return 'is-valid';\r\n    }\r\n  }\r\n\r\n  resetForm() {\r\n    this.createTask.reset();\r\n    this.createTask.patchValue({\r\n      title: '',\r\n      description: '',\r\n      priority: '',\r\n      startDate: new Date().toISOString().substr(0, 10),\r\n      endDate: new Date().toISOString().substr(0, 10),\r\n      owner: ''\r\n    });\r\n    this.isWasSubmit = false;\r\n    this.isLoading = false;\r\n    this.taskService.setCurrentTask(null);\r\n  }\r\n\r\n}\r\n","<form class=\"modal-body\" [formGroup]=\"createTask\" (ngSubmit)=\"onCreate()\" novalidate>\r\n    <!-- Title -->\r\n    <div class=\"form-group\">\r\n        <label for=\"taskName\">Task name:</label>\r\n        <input type=\"text\" class=\"form-control\" [ngClass]=\"GetValidationClass('title')\" id=\"taskName\"\r\n            placeholder=\"Enter task name\" formControlName=\"title\" />\r\n        <div class=\"invalid-feedback\">\r\n            <p class=\"m-0\" style=\"font-weight:600;\">*Please enter title.</p>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Description -->\r\n    <div class=\"form-group\">\r\n        <label for=\"description\">Task description:</label>\r\n        <small style=\"color:red;font-weight:600;\">*Optional</small>\r\n        <textarea name=\"description\" class=\"form-control\" [ngClass]=\"GetValidationClass('description')\" id=\"description\"\r\n            cols=\"30\" rows=\"1\" placeholder=\"Add description to your task\" formControlName=\"description\"></textarea>\r\n    </div>\r\n\r\n    <!-- Date task -->\r\n    <div class=\"form-row\">\r\n        <!-- Start data task -->\r\n        <div class=\"form-group col-md-5 col-lg-3\">\r\n            <label for=\"startDate\">Start date:</label>\r\n            <input type=\"date\" id=\"startDate\" formControlName=\"startDate\"\r\n                [ngClass]=\"GetValidationClass('startDate')\">\r\n        </div>\r\n\r\n        <!-- End data task -->\r\n        <div class=\"form-group col-md-5 col-lg-3\">\r\n            <label for=\"endDate\">End date:</label>\r\n            <input type=\"date\" id=\"endDate\" formControlName=\"endDate\"\r\n                [ngClass]=\"GetValidationClass('endDate')\" />\r\n            <div class=\"invalid-feedback\">\r\n                <p class=\"m-0\" style=\"font-weight:600;\">*Invalid end date</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n        <div class=\"form-group col-lg-3\">\r\n            <!-- Priority -->\r\n            <label for=\"priority\">Task priority</label>\r\n            <select class=\"custom-select\" [ngClass]=\"GetValidationClass('priority')\" name=\"priority\" id=\"priority\"\r\n                formControlName=\"priority\">\r\n                <option disabled checked value=\"\">Choose a priority</option>\r\n                <option value=\"high\">High</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"low\">Low</option>\r\n            </select>\r\n            <div class=\"invalid-feedback\">\r\n                <p class=\"m-0\" style=\"font-weight:600;\">*Please choose priority.</p>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Owners task -->\r\n        <div class=\"form-group col-lg-3\">\r\n            <label for=\"priority\">Owner task</label>\r\n            <small style=\"color:red;font-weight:600;\">*Optional</small>\r\n            <select class=\"custom-select\" [ngClass]=\"GetValidationClass('owner')\" name=\"priority\" id=\"priority\"\r\n                formControlName=\"owner\">\r\n                <option disabled value=\"\">Choose a member</option>\r\n                <option *ngFor=\"let member of members\" value={{member.userID._id}}>\r\n                    {{member.userID.fName}} {{member.userID.lName}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"form-row\">\r\n        <button type=\"submit\" class=\"btn btn-success mr-1 d-flex align-items-center\" [disabled]=\"isLoading\">\r\n            <!-- If Loading -->\r\n            <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            <span *ngIf=\"isLoading\" class=\"ml-1\">Loading</span>\r\n            <!-- Else -->\r\n            <span *ngIf=\"!isLoading && !task\">Create</span>\r\n            <span *ngIf=\"!isLoading && task\">Update</span> \r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"resetForm()\" [disabled]=\"isLoading\">Cancel</button>\r\n    </div>\r\n\r\n</form>\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n// Models\nimport { Member } from 'src/app/models/member.model';\n// services\nimport { MemberService } from 'src/app/services/member.service';\n\ndeclare var $: any;\n\n\n@Component({\n  selector: 'app-remove-member-modal',\n  templateUrl: './remove-member-modal.component.html',\n  styleUrls: ['./remove-member-modal.component.css']\n})\nexport class RemoveMemberModalComponent implements OnInit, OnDestroy {\n  @Input() member: Member;\n\n  isLoading = false;\n  errorMsg: String = null;\n\n  // Subscriptions\n  errMsgSub: Subscription;\n  succMsgSub: Subscription;\n\n\n  constructor(private memberService: MemberService) { }\n\n  ngOnInit(): void {\n    // When member removed\n    this.succMsgSub = this.memberService.successMsg$.subscribe(() => {\n      $('#removeMemberModal').modal('hide');\n      this.isLoading = false;\n    });\n\n    // If got error\n    this.errMsgSub = this.memberService.errMsg$.subscribe(() => {\n      this.errorMsg = 'Sorry, we got problem please try later.'\n      this.isLoading = false;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.errMsgSub.unsubscribe();\n    this.succMsgSub.unsubscribe();\n  }\n\n  removeMember() {\n    this.isLoading = true;\n    this.memberService.removeMember(this.member._id);\n  }\n\n  onClose() {\n    this.isLoading = false;\n    this.errorMsg = null;\n  }\n}\n","<div class=\"modal fade\" id=\"removeMemberModal\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Remove member</h4>\n                <button type=\"button\" (click)=\"onClose()\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span>&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{errorMsg}}</div>\n\n                <p *ngIf=\"member && !errorMsg\" class=\"m-0\">\n                    Are you sure you want to remove <b>{{member.userID.fName}} {{member.userID.lName}}</b> from the project?\n                </p>\n\n                <p *ngIf=\"errorMsg \" class=\"alert alert-danger m-0\">\n                    {{errorMsg}}\n                </p>\n                \n            </div>\n            <div class=\"modal-footer\">\n                <!-- Delete button -->\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeMember()\" [disabled]=\"isLoading\">\n                    <!-- If Loading -->\n                    <div *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </div>\n                    <span *ngIf=\"isLoading\" class=\"ml-2\">Loading</span>\n                    <!-- If not loading -->\n                    <span *ngIf=\"!isLoading\">Remove</span>\n                </button>\n                <!-- Cancel button -->\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\"\n                    [disabled]=\"isLoading\" (click)=\"onClose()\">Cancel\n                </button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ElementRef, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\n\r\nimport { UserService } from '../../services/user.service';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.css']\r\n})\r\nexport class HomePageComponent implements OnInit, OnDestroy {\r\n  users: User[];\r\n  subscription: Subscription;\r\n\r\n  constructor(private elementRef: ElementRef, private userService: UserService, private authService: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.loadUsers();\r\n\r\n    this.subscription = this.userService.users$.subscribe(users => {\r\n      this.users = users;\r\n      console.log({ users });\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n\r\n}\r\n","<section class=\"contain\">\r\n  <header class=\"mb-3\">\r\n    <img src=\"../../../assets/logo-white.png\" alt=\"Task team\">\r\n  </header>\r\n  <main>\r\n    <div app-signin-form class=\"container-login text-light\"></div>\r\n  </main>\r\n</section>\r\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n// Models\r\nimport { Member } from 'src/app/models/member.model';\r\nimport { User } from 'src/app/models/user.model';\r\n// Services\r\nimport { MemberService } from 'src/app/services/member.service';\r\n\r\n@Component({\r\n  selector: 'project-members-modal',\r\n  templateUrl: './project-members-modal.component.html',\r\n  styleUrls: ['./project-members-modal.component.css']\r\n})\r\nexport class ProjectMembersModalComponent implements OnInit, OnDestroy {\r\n  @Input() memberUser: User\r\n  @Output() projcetMemberEmitter: EventEmitter<string> = new EventEmitter();\r\n\r\n\r\n  members: Member[] = [];\r\n  userMember: Member = null;\r\n\r\n  // Subscriptions\r\n  membersSub: Subscription;\r\n  userMemberSub: Subscription;\r\n\r\n  constructor(private memberService: MemberService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.membersSub = this.memberService.members$.subscribe(projectMembers => {\r\n      this.members = projectMembers;\r\n    });\r\n    this.userMemberSub = this.memberService.userMember$.subscribe(member => { this.userMember = member });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.membersSub.unsubscribe();\r\n    this.userMemberSub.unsubscribe();\r\n  }\r\n\r\n  passMemberID(memberID: Member['_id']) {\r\n    this.projcetMemberEmitter.emit(memberID);\r\n  }\r\n\r\n}\r\n","<div class=\"modal fade\" id=\"membersModal\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog \" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">Project members</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <div class=\"list-group\">\r\n          <!-- Members project list -->\r\n          <div class=\"list-group-item list-group-item-action d-flex align-items-center justify-content-between\"\r\n            *ngFor=\"let member of members\" [ngClass]=\"{'active': member.permission == 'admin'}\">\r\n            <a class=\"d-flex align-items-center w-100 h-100\" [href]=\"'/profile/' + member.userID._id\">\r\n              <img class=\"mr-2\" [src]=\"member.userID.imgUrl ? member.userID.imgUrl : './assets/profile.svg' \">\r\n              <p class=\"m-0 p-0\">{{member.userID.fName}} {{member.userID.lName}}</p>\r\n            </a>\r\n            <!-- Actions menu -->\r\n            <div *ngIf=\"userMember && userMember.permission === 'admin'\" class=\"dropdown dropleft\">\r\n              <button class=\"btn-actions\" id=\"btnAction\" data-toggle=\"dropdown\" aria-haspopup=\"true\"\r\n                aria-expanded=\"false\">\r\n                <img src=\"./assets/three-dots-vertical.svg\" />\r\n              </button>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"btnAction\">\r\n                <button class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#removeMemberModal\"\r\n                  (click)=\"passMemberID(member._id)\">\r\n                  Remove member\r\n                </button>\r\n                <button class=\"dropdown-item\" data-toggle=\"modal\" data-target=\"#memberPermissionModal\"\r\n                  (click)=\"passMemberID(member._id)\">Change permission</button>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, Input } from '@angular/core';\r\n// Models\r\nimport { Task } from 'src/app/models/task.model';\r\n\r\n@Component({\r\n  selector: 'app-table-tasks',\r\n  templateUrl: './table-tasks.component.html',\r\n  styleUrls: ['./table-tasks.component.css']\r\n})\r\nexport class TableTasksComponent {\r\n  @Input() tasks: Task[] = [];\r\n\r\n  constructor() { }\r\n\r\n}\r\n","<table class=\"table table-bordered table-hover\">\r\n  <thead>\r\n    <tr>\r\n      <th rowspan=\"2\" colspan=\"2\">Task name</th>\r\n      <th rowspan=\"2\">Owner</th>\r\n      <th rowspan=\"2\">Status</th>\r\n      <th rowspan=\"2\">Priority</th>\r\n      <th colspan=\"2\">Date</th>\r\n    </tr>\r\n    <tr>\r\n      <th>Start</th>\r\n      <th>End</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr app-row-task *ngFor=\"let task of tasks;let i= index;\" [task]=\"task\"></tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport * as $ from 'jquery';\r\n// Services\r\nimport { ProjectService } from 'src/app/services/project.service';\r\n//  Models\r\nimport { Project } from 'src/app/models/project.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-project',\r\n  templateUrl: './create-project.component.html',\r\n  styleUrls: ['./create-project.component.css']\r\n})\r\nexport class CreateProjectComponent implements OnInit, OnDestroy {\r\n  errorMsg: string = null;\r\n  successMsg: string = null;\r\n\r\n  errorMsgSub: Subscription;\r\n  successMsgSub: Subscription;\r\n  createdProjectSub: Subscription;\r\n\r\n  createdProject: Project = null;\r\n\r\n\r\n  constructor(private projectService: ProjectService) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.projectService.setCurrentProject(null);\r\n\r\n    this.createdProjectSub = this.projectService.currentProject$.subscribe(createdProject => this.createdProject = createdProject);\r\n\r\n    this.errorMsgSub = this.projectService.errMsg$.subscribe(errMsg => { this.errorMsg = errMsg });\r\n\r\n    this.successMsgSub = this.projectService.successMsg$.subscribe(successMsg => {\r\n      this.successMsg = successMsg;\r\n      $('.create-project').slideUp('200');\r\n      setTimeout(() => { $('.add-member').slideDown('200'); }, 300);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.errorMsgSub.unsubscribe();\r\n    this.successMsgSub.unsubscribe();\r\n    this.createdProjectSub.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"layout-main\">\r\n\r\n  <app-menu-login></app-menu-login>\r\n\r\n  <div class=\"container\">\r\n    <header>\r\n      <h1 class=\"header-page\">New project</h1>\r\n    </header>\r\n    <main class=\"pb-1\">\r\n\r\n      <!-- Massages -->\r\n      <section>\r\n        <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{errorMsg}}</div>\r\n        <div *ngIf=\"successMsg\" class=\"alert alert-success\" role=\"alert\">{{successMsg}}</div>\r\n      </section>\r\n\r\n      <!-- Create project -->\r\n      <p class=\"h3 top\">1. Create project</p>\r\n      <section class=\"contain create-project\">\r\n        <app-project-form></app-project-form>\r\n      </section>\r\n\r\n      <!-- Add members to project -->\r\n      <p class=\"h3\">2. Add members</p>\r\n      <section class=\"contain add-member\" style=\"display: none;\">\r\n        <h4>Add team members</h4>\r\n        <h5 class=\"m-0\">Invite members to your project and click on \"Next\" button when you will end</h5>\r\n        <small>*You can skip this step now and return to it later.</small>\r\n\r\n        <!-- Button modal end create-project -->\r\n        <button type=\"button\" class=\"btn btn-success my-3\" data-toggle=\"modal\" data-target=\"#modal\">\r\n          Next\r\n        </button>\r\n\r\n        <!-- Add-member to  project component -->\r\n        <app-add-member></app-add-member>\r\n\r\n        <!-- Members table -->\r\n        <h2 class=\"mt-4\">Project members</h2>\r\n        <app-table-invitees-management></app-table-invitees-management>\r\n\r\n      </section>\r\n    </main>\r\n\r\n  </div>\r\n\r\n</div>\r\n\r\n<!-- Modal -->\r\n<div *ngIf=\"createdProject\" class=\"modal fade\" id=\"modal\" data-backdrop=\"static\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-md\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Create project</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p class=\"m-0\">Your project has been created.</p>\r\n        <p class=\"m-0\">You can add more members by clicking \"Back\" or to end click \"End\".</p>\r\n        <p class=\"m-0\">You can always add more members to the project whenever you want on your project page.</p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Back</button>\r\n        <a [href]=\"'/project/'+ createdProject._id\" class=\"btn btn-primary\">End</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function TaskDateValidator(start: string, end: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const startDate = formGroup.controls[start];\r\n    const endDate = formGroup.controls[end];\r\n\r\n    const startTimeStamp = new Date(startDate.value);\r\n    const endTimeStamp = new Date(endDate.value);\r\n\r\n    if (startTimeStamp > endTimeStamp) {\r\n      startDate.setErrors({ dateValidator: true });\r\n      endDate.setErrors({ dateValidator: true });\r\n    } else {\r\n      startDate.setErrors(null);\r\n      endDate.setErrors(null);\r\n    }\r\n  };\r\n}\r\n","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Member } from 'src/app/models/member.model';\nimport { MemberService } from 'src/app/services/member.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-change-permission-modal',\n  templateUrl: './change-permission-modal.component.html',\n  styleUrls: ['./change-permission-modal.component.css']\n})\nexport class ChangePermissionModalComponent implements OnInit, OnChanges {\n  @Input() member: Member;\n\n  isLoading = false;\n  errorMsg: String = null;\n  successMsg: string = null;\n  selectOption: Member['permission'];\n\n  // Subscriptions\n  errMsgSub: Subscription;\n  succMsgSub: Subscription;\n\n  //  Permission options\n  options = ['Normal', 'Admin'];\n\n  constructor(private memberService: MemberService) { }\n\n  ngOnInit(): void {\n    this.selectOption = this.member ? this.member.permission : 'admin';\n\n    // When member removed\n    this.succMsgSub = this.memberService.successMsg$.subscribe(() => {\n      this.successMsg = 'Member\\'s permission updated';\n      setTimeout(() => { $('#memberPermissionModal').modal('hide') }, 700);\n      setTimeout(this.onClose, 1200);\n    });\n\n    // If got error\n    this.errMsgSub = this.memberService.errMsg$.subscribe(() => {\n      this.errorMsg = 'Sorry, we got problem please try later.'\n      this.isLoading = false;\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (!changes.member.firstChange) {\n      const member = changes.member.currentValue;\n      this.selectOption = member.permission;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.errMsgSub.unsubscribe();\n    this.succMsgSub.unsubscribe();\n  }\n\n  onSubmit() {\n    this.isLoading = true;\n    this.member.permission = this.selectOption;\n    console.log(this.member);\n\n    this.memberService.updateMember(this.member);\n  }\n\n  onClose() {\n    this.isLoading = false;\n    this.errorMsg = null;\n    this.successMsg = null;\n  }\n}\n","<div class=\"modal fade\" id=\"memberPermissionModal\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Remove member</h4>\n                <button type=\"button\" class=\"close\" (click)=\"onClose()\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span>&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n\n                <!-- Error massage -->\n                <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{errorMsg}}</div>\n                <!-- Success massage -->\n                <div *ngIf=\"successMsg\" class=\"alert alert-success\" role=\"alert\">{{successMsg}}</div>\n\n                <!-- Pemisson change form -->\n                <form *ngIf=\"member && (!errorMsg && !successMsg)\" >\n                    <div class=\"form-group\">\n                        <label for=\"Permission\">Member permission</label>\n                        <!-- <select class=\"custom-select\" formControlName=\"permission\"> -->\n                        <select class=\"custom-select\" [(ngModel)]=\"selectOption\" name=\"permission\" >\n                            <option *ngFor=\"let option of options\" [ngValue]=\"option.toLowerCase()\">\n                                {{option}}\n                            </option>\n                        </select>\n                    </div>\n\n                    <div class=\"form-group d-flex\">\n                        <!-- Change button -->\n                        <button type=\"submit\" class=\"btn btn-danger mr-1\" (click)=\"onSubmit()\" [disabled]=\"isLoading\">\n                            <!-- If Loading -->\n                            <div *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\">\n                                <span class=\"sr-only\">Loading...</span>\n                            </div>\n                            <span *ngIf=\"isLoading\" class=\"ml-2\">Loading</span>\n                            <!-- If not loading -->\n                            <span *ngIf=\"!isLoading\">Change</span>\n                        </button>\n\n                        <!-- Cancel button -->\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"onClose()\"\n                            [disabled]=\"isLoading\">\n                            Cancel\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-menu-login',\r\n  templateUrl: './menu-login.component.html',\r\n  styleUrls: ['./menu-login.component.css']\r\n})\r\nexport class MenuLoginComponent implements OnInit, OnDestroy {\r\n  userLogged: User;\r\n  // Subscriptions\r\n  userLoggedSub: Subscription;\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userLoggedSub = this.authService.loggedUser$.subscribe((user: User) => { this.userLogged = user; });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.userLoggedSub.unsubscribe();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n","<div class=\"menu-contain\">\r\n  <a routerLink=\"/\" routerLinkActive=\"activity\">\r\n    <img class=\"logo\" src=\"./assets/logo-white.png\" alt=\"logo\">\r\n  </a>\r\n  <nav>\r\n    <!-- Profile menu -->\r\n    <div class=\"btn-group dropright mb-4\">\r\n      <button class=\"profile-btn\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n        <img [src]=\"userLogged.imgUrl ? userLogged.imgUrl : '../../../assets/profile.svg' \" alt=\"profile\">\r\n      </button>\r\n      <div class=\"dropdown-menu\">\r\n        <a class=\"dropdown-item\" [href]=\"'/profile/' + userLogged._id\">Profile</a>\r\n        <a class=\"dropdown-item\" href=\"/setting\">Settings</a>\r\n        <div class=\" dropdown-divider\"></div>\r\n        <button class=\"dropdown-item text-center\" (click)=\"onLogout()\">Logout</button>\r\n      </div>\r\n    </div>\r\n\r\n    <ul class=\"clean-least\">\r\n      <li>\r\n        <a class=\"link\" [routerLink]=\"'/profile/'+userLogged._id\" routerLinkActive=\"activity\"\r\n          [routerLinkActiveOptions]=\"{ exact: true }\">Profile</a>\r\n      </li>\r\n      <li>\r\n        <a class=\"link\" routerLink=\"/projects\" routerLinkActive=\"activity\"\r\n          [routerLinkActiveOptions]=\"{ exact: true }\">My\r\n          projects</a>\r\n      </li>\r\n      <li>\r\n        <a class=\"link\" routerLink=\"/tasks\" routerLinkActive=\"activity\" [routerLinkActiveOptions]=\"{ exact: true }\">My\r\n          tasks</a>\r\n      </li>\r\n      <li>\r\n        <a class=\"link\" routerLink=\"/createProject\" routerLinkActive=\"activity\"\r\n          [routerLinkActiveOptions]=\"{ exact: true }\">Create\r\n          project</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute } from '@angular/router';\r\n//Services\r\nimport { MemberService } from 'src/app/services/member.service';\r\nimport { ProjectService } from 'src/app/services/project.service';\r\nimport { TaskService } from 'src/app/services/task.service';\r\n// Models\r\nimport { Member } from 'src/app/models/member.model';\r\nimport { Task } from 'src/app/models/task.model';\r\nimport { Project } from 'src/app/models/project.model';\r\nimport { first } from 'rxjs/operators';\r\n\r\ndeclare var $: any;\r\n\r\n@Component({\r\n  selector: 'app-one-project',\r\n  templateUrl: './one-project.component.html',\r\n  styleUrls: ['./one-project.component.css']\r\n})\r\nexport class OneProjectComponent implements OnInit, OnDestroy {\r\n  currentProject: Project;\r\n  projectTasks: Task[];\r\n  userMember: Member;\r\n  isLoading = true;\r\n  taskMsg: String = null;\r\n  projectMember: Member;\r\n\r\n  // Subscriptions\r\n  tasksSub: Subscription;\r\n  taskMsgSub: Subscription;\r\n\r\n  constructor(\r\n    private memberService: MemberService,\r\n    private projectService: ProjectService,\r\n    private taskService: TaskService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // Sets the project (Save the project for later)\r\n    this.projectService.setCurrentProject(this.route.snapshot.data.project);\r\n\r\n    // Gets the project (When \"setCurrentProject\" will end)\r\n    this.projectService.currentProject$.pipe(\r\n      // If have currentProject will do the subscribe\r\n      first(currentProject => currentProject ? true : false)).subscribe(this._projectInitialize.bind(this));\r\n\r\n    // Listener to project's task\r\n    this.tasksSub = this.taskService.tasks$.subscribe(\r\n      tasks => {\r\n        if (this.projectTasks) this.isLoading = false;\r\n        this.projectTasks = tasks;\r\n      });\r\n\r\n    // Task massages\r\n    this.taskMsgSub = this.taskService.taskMsg$.subscribe(this._showMessage.bind(this));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.taskMsgSub.unsubscribe();\r\n    this.tasksSub.unsubscribe();\r\n  }\r\n\r\n  setProjectMember(memberID: Member['_id']) {\r\n    this.projectMember = this.memberService.getProjectMemberById(memberID);\r\n  }\r\n\r\n\r\n  // Initializing the project (Load members and tasks of project)\r\n  private _projectInitialize(project) {\r\n    this.currentProject = project;\r\n    const projectID = project._id\r\n    // Load the project's members\r\n    this.memberService.loadProjectMembers(projectID);\r\n    this.memberService.members$.pipe(\r\n      // Once the project's members have been received will save the userLogged's member\r\n      first(members => members.length > 0)).subscribe((members) => {\r\n        // Save userLogged's member for later\r\n        this.memberService.saveUserMember();\r\n\r\n        // When the user's member saved will get from the service it\r\n        this.memberService.userMember$.pipe(first(member => member ? true : false))\r\n          .subscribe(member => { this.userMember = member });\r\n      });\r\n\r\n    // Load the project's tasks\r\n    this.taskService.loadTasks({ projectID });\r\n  }\r\n\r\n  // Displays received messages for 3 seconds\r\n  private _showMessage(msg) {\r\n    this.taskMsg = msg;\r\n    // Will remove the message from the screen after 3 seconds\r\n    setTimeout(() => {\r\n      $('.taskMsg').alert('close')\r\n      // After \"fade\" animation of the message will end\r\n      setTimeout(() => { this.taskMsg = null }, 2000);\r\n    }, 3000);\r\n  }\r\n\r\n}\r\n","<div class=\"layout-main\">\r\n  <app-menu-login></app-menu-login>\r\n\r\n  <main class=\"container\">\r\n\r\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <!-- Navigation-bar button -->\r\n      <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav\">\r\n          <li class=\"nav-item mr-2\">\r\n            <!-- \"Modal members-project button\" -->\r\n            <button type=\"button\" class=\"btn btn-primary d-flex align-items-center\" data-toggle=\"modal\"\r\n              data-target=\"#membersModal\">\r\n              <img class=\"mr-1\" src=\"./assets/people-fill.svg\" style=\"width: 1.1rem;\" />\r\n              Members\r\n            </button>\r\n          </li>\r\n          <li class=\"nav-item mr-2\">\r\n            <!-- \"Modal add-task button\" -->\r\n            <button type=\"button\" class=\"btn btn-success d-flex align-items-center\" data-toggle=\"modal\"\r\n              data-target=\"#addTaskModal\">\r\n              <img class=\"mr-1\" src=\"./assets/task-plus.svg\" style=\"width: 1.1rem;\" />\r\n              Add task\r\n            </button>\r\n          </li>\r\n          <li *ngIf=\"userMember && userMember.permission === 'admin' \" class=\"nav-item\">\r\n            <div class=\"dropdown\">\r\n              <button type=\"button\" class=\"btn btn-info dropdown-toggle d-flex align-items-center\" id=\"adminMenu\"\r\n                data-toggle=\"dropdown\">\r\n                <img class=\"mr-1\" src=\"./assets/gear.svg\" />\r\n                Admin options\r\n              </button>\r\n              <div class=\"dropdown-menu\" aria-labelledby=\"adminMenu\">\r\n                <button class=\"dropdown-item d-flex align-items-center\" data-toggle=\"modal\"\r\n                  data-target=\"#delProjectModal\">\r\n                  <img class=\"mr-1\" src=\"./assets/trash.svg\" />\r\n                  Delete project\r\n                </button>\r\n                <button class=\"dropdown-item d-flex align-items-center\" data-toggle=\"modal\"\r\n                  data-target=\"#inviteMemberModal\">\r\n                  <img class=\"mr-1\" src=\"./assets/person-plus.svg\" />\r\n                  Invite new members\r\n                </button>\r\n                <button class=\"dropdown-item d-flex align-items-center\" data-toggle=\"modal\"\r\n                  data-target=\"#renmaeProjectMoadl\">\r\n                  <img class=\"mr-1\" src=\"./assets/pencil.svg\" />\r\n                  Rename project\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n\r\n    <h1 class=\"m-2\" style=\"font-family: Chunkfive\">{{currentProject.title}}</h1>\r\n\r\n    <!-- Massages -->\r\n    <div *ngIf=\"taskMsg\" class=\"taskMsg alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n      <strong>{{taskMsg}}</strong>\r\n      <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!-- When the data is loaded -->\r\n    <section *ngIf=\"isLoading\" class=\"d-flex align-items-center\">\r\n      <div class=\"spinner-border\" style=\"width: 1.5rem; height: 1.5rem;\" role=\"status\"></div>\r\n      <p class=\"h3 ml-1\">Loading, please wait...</p>\r\n    </section>\r\n\r\n    <!-- If there are no tasks yet -->\r\n    <section *ngIf=\"!isLoading && !projectTasks.length\" class=\"non-task\">\r\n      <p>You do not have any tasks in the project yet.</p>\r\n      <div class=\"d-flex align-items-center\">\r\n        <p class=\"m-0 mr-2\">Click on</p>\r\n        <!-- \"Modal add-task button\" -->\r\n        <button type=\"button\" class=\"btn btn-success d-flex align-items-center\" data-toggle=\"modal\"\r\n          data-target=\"#addTaskModal\">\r\n          <img class=\"mr-1\" src=\"./assets/task-plus.svg\" style=\"width: 1.1rem;\" />\r\n          Add task\r\n        </button>\r\n        <p class=\"m-0 ml-2\">to add task.</p>\r\n      </div>\r\n    </section>\r\n\r\n    <!-- Table projectTasks -->\r\n    <app-table-tasks *ngIf=\"projectTasks.length\" [tasks]=\"projectTasks\"></app-table-tasks>\r\n  </main>\r\n\r\n  <!-- Modal \"Project-members\" -->\r\n  <project-members-modal (projcetMemberEmitter)=setProjectMember($event) [memberUser]=\"userMember\">\r\n  </project-members-modal>\r\n  <!-- Modal \"Add-task\" -->\r\n  <add-task-modal></add-task-modal>\r\n  <!-- Modal \"Delete project\" -->\r\n  <app-delete-project-modal [project]=\"currentProject\"></app-delete-project-modal>\r\n  <!-- Modal \"Rename project\" -->\r\n  <app-rename-project-modal [project]=\"currentProject\"></app-rename-project-modal>\r\n  <!-- Modal \"Delete task\" -->\r\n  <app-delete-task-modal></app-delete-task-modal>\r\n  <!-- Modal \"Invite members\" to project -->\r\n  <app-invite-member-modal></app-invite-member-modal>\r\n  <!-- Modal \"Remove-member\"-->\r\n  <app-remove-member-modal [member]=\"projectMember\"></app-remove-member-modal>\r\n  <!-- Modal \"Change permission\" -->\r\n  <app-change-permission-modal [member]=\"projectMember\"></app-change-permission-modal>\r\n\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\ndeclare var $: any\r\n// Models\r\nimport { Project } from 'src/app/models/project.model';\r\n// Services\r\nimport { ProjectService } from 'src/app/services/project.service';\r\n\r\n@Component({\r\n  selector: 'app-delete-project-modal',\r\n  templateUrl: './delete-project-modal.component.html',\r\n  styleUrls: ['./delete-project-modal.component.css']\r\n})\r\nexport class DeleteProjectModalComponent implements OnInit {\r\n  @Input() project: Project;\r\n  inputProjectName = '';\r\n  isBtnDelDisabled = true;\r\n\r\n  errMsg: string = null;\r\n\r\n  // Subscriptions\r\n  errorMsgSub: Subscription;\r\n  successSub: Subscription;\r\n\r\n  constructor(private projectService: ProjectService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.errorMsgSub = this.projectService.errMsg$.subscribe(errMsg => { this.errMsg = errMsg });\r\n    this.successSub = this.projectService.successMsg$.subscribe(success => {\r\n      $('#delProjectModal').modal('hide');\r\n      this.router.navigateByUrl('/projects');\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.errorMsgSub.unsubscribe()\r\n    this.successSub.unsubscribe()\r\n  }\r\n\r\n  onInputChage() {\r\n    if (this.inputProjectName == this.project.title) {\r\n      this.isBtnDelDisabled = false;\r\n    } else {\r\n      this.isBtnDelDisabled = true;\r\n    }\r\n  }\r\n\r\n  onDelete() {\r\n    this.projectService.removeProject(this.project._id);\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"modal fade\" id=\"delProjectModal\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\">Delete project</h5>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div *ngIf=\"errMsg\" class=\"alert alert-danger\">\r\n            Delete project failed, please try again.\r\n          </div>\r\n          <p>To delete the project \"{{project.title}}\", type the name to confirm.</p>\r\n          <form>\r\n            <div class=\"form-group\">\r\n          <input type=\"text\" name=\"inputProjectName\" class=\"form-control\" placeholder=\"Enter project name\" [(ngModel)]=\"inputProjectName\" (ngModelChange)=\"onInputChage()\"/>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <button type=\"button\" class=\"btn btn-danger mr-2\" [disabled]=\"isBtnDelDisabled\" (click)=\"onDelete()\">Delete</button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n         </div>\r\n        </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>","import { Router } from '@angular/router';\r\nimport { Component } from '@angular/core';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Front';\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  // A function for move from page to page\r\n  goToPage(pageName: string): void {\r\n    this.router.navigate([`${pageName}`]);\r\n  }\r\n\r\n}\r\n","<router-outlet>\r\n</router-outlet>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\n// Services\r\nimport { ProjectService } from 'src/app/services/project.service';\r\nimport { TaskService } from 'src/app/services/task.service';\r\n// Module\r\nimport { Project } from 'src/app/models/project.model';\r\nimport { DataProject } from 'src/app/models/dataProject.model';\r\n\r\n@Component({\r\n  selector: 'app-my-projects',\r\n  templateUrl: './my-projects.component.html',\r\n  styleUrls: ['./my-projects.component.css']\r\n})\r\nexport class MyProjectsComponent implements OnInit, OnDestroy {\r\n  dataProjects: DataProject[] = null;\r\n  isLoading = true;\r\n\r\n  // Subscriptions\r\n  dataProjectsSub: Subscription;\r\n\r\n  constructor(private projectService: ProjectService, private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    // Load projects\r\n    this.projectService.loadUserProjects();\r\n\r\n    this.dataProjectsSub = this.projectService.projects$.pipe(\r\n      take(2),\r\n      map((projects: Project[]) => {\r\n        let dataProjects: DataProject[] = [];\r\n\r\n        projects.forEach(project => {\r\n          this.taskService.getTasksProjectCount(project._id).subscribe(\r\n            countTasks => {\r\n              dataProjects.push({ project, countTasks });\r\n            });\r\n        });\r\n        return dataProjects;\r\n      })).subscribe(dataProjects => {\r\n        if (this.dataProjects && this.isLoading) this.isLoading = false;\r\n        this.dataProjects = dataProjects;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dataProjectsSub.unsubscribe();\r\n  }\r\n\r\n  getProgress({ countTasks, doneTasks }): string {\r\n    const precent = countTasks\r\n      ? ((doneTasks / countTasks) * 100).toFixed(2)\r\n      : 0;\r\n    return precent + '%'\r\n  }\r\n}\r\n","<div class=\"layout-main\">\r\n  <app-menu-login></app-menu-login>\r\n\r\n  <div class=\"container\">\r\n    <h1 class=\"head header-page\">My Projects</h1>\r\n\r\n    <!-- When the data is loaded -->\r\n    <section *ngIf=\"isLoading\" class=\"d-flex align-items-center justify-content-center mt-4 mr-2\">\r\n      <div class=\"spinner-border\" style=\"width: 2rem; height: 2rem;\" role=\"status\">\r\n        <span class=\"sr-only\">Loading, please wait...</span>\r\n      </div>\r\n      <p class=\"m-0 ml-2\">Loading, please wait...</p>\r\n    </section>\r\n\r\n    <!-- No projects massage -->\r\n    <section *ngIf=\"dataProjects && !dataProjects.length && !isLoading\" class=\"mt-2\">\r\n      <p class=\"h2\"> You have no projects yet</p>\r\n      <a href=\"/createProject\">Create a new one here!</a>\r\n    </section>\r\n\r\n    <!-- Projects table -->\r\n    <table *ngIf=\"dataProjects && dataProjects.length && !isLoading\" class=\"table\">\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th>Title</th>\r\n          <th>Progress</th>\r\n          <th>Remain tasks</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let dataProject of dataProjects\">\r\n          <td>{{dataProject.project.title}}</td>\r\n          <td>\r\n            <div class=\"progress\">\r\n              <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{'width':getProgress(dataProject.countTasks)}\"\r\n                aria-valuenow=\"80\" aria-valuemin=\"0\" aria-valuemax=\"100\">\r\n                {{getProgress(dataProject.countTasks)}}\r\n              </div>\r\n              <span *ngIf=\"!dataProject.countTasks.doneTasks\" class=\"ml-1 mt-2\">0%</span>\r\n            </div>\r\n          </td>\r\n          <td>{{dataProject.countTasks.doneTasks}}/{{dataProject.countTasks.countTasks}}</td>\r\n          <td><a [href]=\"'/project/'+ dataProject.project._id\" class=\"btn btn-primary\">Open</a></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\n// Models\r\nimport { Member } from '../models/member.model';\r\nimport { Project } from '../models/project.model';\r\n// Services\r\nimport { AuthService } from './auth.service';\r\n// Environment variables\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MemberService {\r\n  private BASE_URL = environment.baseUrl;\r\n  private endpoint = 'member';\r\n\r\n  private _members$ = new BehaviorSubject<Member[]>([]);\r\n  public members$ = this._members$.asObservable();\r\n\r\n  private _userMember$ = new BehaviorSubject<Member>(null);\r\n  public userMember$ = this._userMember$.asObservable();\r\n\r\n  public successMsg$ = new Subject<any>();\r\n  public errMsg$ = new Subject<any>();\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  async loadProjectMembers(projectID: Project['_id']) {\r\n    (await this.getMembers({ projectID })).subscribe(members => {\r\n      this._members$.next(members);\r\n    }, error => { console.error(error) });\r\n  }\r\n\r\n  async getMembers(filter: { [key: string]: string } = {}): Promise<Observable<Member[]>> {\r\n    return await this.http.get<Member[]>(`${this.BASE_URL}${this.endpoint}`, { params: filter })\r\n  }\r\n\r\n  createMember(member) {\r\n    console.log('Service: ', member);\r\n    this.http.post<Member>(`${this.BASE_URL}${this.endpoint}`, member).subscribe(\r\n      createdMember => {\r\n        this.successMsg$.next('New member created');\r\n        this._members$.next([...this._members$.value, createdMember])\r\n      }, error => {\r\n        if (Array.isArray(error.error)) {\r\n          error = error.error[0];\r\n        } else {\r\n          console.error(error)\r\n          error = {\r\n            msg: 'We are sorry, we got a problem.\\nPlease try again later.',\r\n            param: 'unknown',\r\n          };\r\n        }\r\n        this.errMsg$.next(error);\r\n      });\r\n  }\r\n\r\n  updateMember(member: Member) {\r\n    this.http.put<Member>(`${this.BASE_URL}${this.endpoint}`, member).subscribe(\r\n      memberUpdated => {\r\n        // Updates member\r\n        const members = this._members$.value.map(member => {\r\n          return (member._id == memberUpdated._id) ? memberUpdated : member;\r\n        });\r\n        this._members$.next(members);\r\n        this.successMsg$.next('Member updated successfully.');\r\n      }, error => {\r\n        console.error(error);\r\n        this.errMsg$.next('Member updated failed.');\r\n      });\r\n  }\r\n\r\n  removeMember(memberID: Member['_id']) {\r\n    this.http.delete<Member>(`${this.BASE_URL}${this.endpoint}/${memberID}`).subscribe(\r\n      res => {\r\n        const members = this._members$.value.filter(member => member._id != memberID);\r\n        this._members$.next(members);\r\n        this.successMsg$.next('Member removed.');\r\n      }, error => {\r\n        console.error(error);\r\n        this.errMsg$.next('Remove meber field.');\r\n      });\r\n  }\r\n\r\n  getProjectMemberById(memberID: Member['_id']) {\r\n    const projectMember: Member = this._members$.value.find(member => member._id == memberID);\r\n    return projectMember;\r\n  }\r\n\r\n  saveUserMember() {\r\n    this.auth.loggedUser$.subscribe(\r\n      loggedUser => {\r\n        this._members$.subscribe(\r\n          members => {\r\n            const userMember = members.find(member => loggedUser._id == member.userID._id);\r\n            this._userMember$.next(userMember);\r\n          });\r\n      });\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n// Services\r\nimport { TaskService } from 'src/app/services/task.service';\r\n// Models\r\nimport { Task } from 'src/app/models/task.model';\r\ndeclare var $: any;\r\n\r\n\r\n@Component({\r\n  selector: 'add-task-modal',\r\n  templateUrl: './add-task-modal.component.html',\r\n  styleUrls: ['./add-task-modal.component.css']\r\n})\r\nexport class AddTaskModalComponent implements OnInit, OnDestroy {\r\n  currentTask: Task = null\r\n\r\n  // Subscriptions\r\n  taskMsgSub: Subscription;\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.taskMsgSub = this.taskService.taskMsg$.subscribe(\r\n      msg => { $('#addTaskModal').modal('hide') }\r\n    )\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.taskMsgSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"modal fade\" id=\"addTaskModal\" tabindex=\"-1\" role=\"dialog\">\r\n  <div class=\"modal-dialog modal-dialog-scrollable modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n\r\n        <h4 *ngIf=\"!currentTask\" class=\"modal-title\">New task</h4>\r\n        <h4  *ngIf=\"currentTask\" class=\"modal-title\">Edit task</h4>\r\n\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <app-task-form></app-task-form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\n// Services\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n// Models\r\nimport { User } from 'src/app/models/user.model';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit, OnDestroy {\r\n\r\n  userProfile: User;\r\n  userLogged: User = null;\r\n\r\n  // Subscriptions\r\n  userLoggedSub: Subscription;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private location: Location) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.userLoggedSub = this.authService.loggedUser$.subscribe(user => { this.userLogged = user; });\r\n    this.userProfile = this.route.snapshot.data.user;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.userLoggedSub.unsubscribe();\r\n  }\r\n\r\n  onBack() {\r\n    this.location.back();\r\n  }\r\n\r\n}\r\n","<div class=\"layout-main\">\r\n  <app-menu-login></app-menu-login>\r\n  <div class=\"main-contain\">\r\n\r\n    <section class=\"details\">\r\n      <header>\r\n        <div class=\"user-img\">\r\n          <img [src]=\"userProfile.imgUrl?userProfile.imgUrl:'../../../assets/user.jpg' \" alt=\"User\">\r\n        </div>\r\n        <div>\r\n          <div class=\"details-row\">\r\n            <p class=\"user-name\">{{userProfile.fName}} {{userProfile.lName}}</p>\r\n          </div>\r\n          <div class=\"details-row\">\r\n            <p class=\"user-title\">{{userProfile.title}}</p>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      <main>\r\n        <div class=\"details-row mb-2\">\r\n          <img class=\"mr-1\" src=\"./assets/telephone.svg\" alt=\"telephone\" />\r\n          <p class=\"title-info\">Phone:</p>\r\n          <p class=\"info\">{{userProfile.phone | phone}}</p>\r\n        </div>\r\n        <div class=\"details-row mb-2\">\r\n          <img class=\"mr-1\" src=\"./assets/email.svg\" alt=\"email\" />\r\n          <p class=\"title-info\">Email:</p>\r\n          <p class=\"info\">{{userProfile.email}}</p>\r\n        </div>\r\n      </main>\r\n      <footer>\r\n        <button class=\"btn btn-primary mr-2\" (click)=\"onBack()\">Back</button>\r\n        <a *ngIf=\"userProfile._id===userLogged._id\" class=\"btn btn-primary\" href=\"/setting\">Edit profile</a>\r\n\r\n      </footer>\r\n    </section>\r\n  </div>\r\n\r\n\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n// Routing Module\r\nimport { AppRoutingModule } from './app-routing.module';\r\n// app component\r\nimport { AppComponent } from './app.component';\r\n// Components\r\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\r\nimport { TableTasksComponent } from './components/table-tasks/table-tasks.component';\r\nimport { RowTaskComponent } from './components/row-task/row-task.component';\r\nimport { MenuLoginComponent } from './components/menu-login/menu-login.component';\r\nimport { ProjectRowComponent } from './components/project-row/project-row.component';\r\nimport { ForgetPassEmailCardComponent } from './components/forget-pass-email-card/forget-pass-email-card.component';\r\nimport { ForgetPassEmailSendedComponent } from './components/forget-pass-email-sended/forget-pass-email-sended.component';\r\nimport { ImgProfileInputComponent } from './components/img-profile-input/img-profile-input.component';\r\nimport { CropperImgComponent } from './components/cropper-img/cropper-img.component';\r\nimport { UpdatePasswordComponent } from './components/update-password/update-password.component';\r\nimport { SigninFormComponent } from './components/signin-form/signin-form.component';\r\nimport { AddMemberComponent } from './components/add-member/add-member.component';\r\nimport { AddTaskModalComponent } from './components/add-task-modal/add-task-modal.component';\r\nimport { ProjectMembersModalComponent } from './components/project-members-modal/project-members-modal.component';\r\nimport { TableInviteesManagementComponent } from './components/table-invitees-management/table-invitees-management.component';\r\nimport { DeleteProjectModalComponent } from './components/delete-project-modal/delete-project-modal.component';\r\nimport { TaskFormComponent } from './components/task-form/task-form.component';\r\nimport { ProjectFormComponent } from './components/project-form/project-form.component';\r\nimport { RenameProjectModalComponent } from './components/rename-project-modal/rename-project-modal.component';\r\nimport { DeleteTaskModalComponent } from './components/delete-task-modal/delete-task-modal.component';\r\nimport { InviteMemberModalComponent } from './components/invite-member-modal/invite-member-modal.component';\r\nimport { ChangePermissionModalComponent } from './components/change-permission-modal/change-permission-modal.component';\r\n// Pages\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { SignUpComponent } from './pages/sign-up/sign-up.component';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { CurrentTasksComponent } from './pages/current-tasks/current-tasks.component';\r\nimport { MyProjectsComponent } from './pages/my-projects/my-projects.component';\r\nimport { OneProjectComponent } from './pages/one-project/one-project.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { CreateProjectComponent } from './pages/create-project/create-project.component';\r\nimport { SettingComponent } from './pages/setting/setting.component';\r\nimport { ForgetPasswordComponent } from './pages/forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\n// Pipes\r\nimport { PhonePipe } from './pipes/phone.pipe';\r\n// Services\r\nimport { CustomInterceptor } from './services/httpInterceptor';\r\nimport { RemoveMemberModalComponent } from './components/remove-member-modal/remove-member-modal.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    HomePageComponent,\r\n    SignUpComponent,\r\n    CurrentTasksComponent,\r\n    TableTasksComponent,\r\n    RowTaskComponent,\r\n    MenuLoginComponent,\r\n    NotFoundComponent,\r\n    MyProjectsComponent,\r\n    ProjectRowComponent,\r\n    OneProjectComponent,\r\n    ProfileComponent,\r\n    CreateProjectComponent,\r\n    AddTaskModalComponent,\r\n    SettingComponent,\r\n    ForgetPasswordComponent,\r\n    ForgetPassEmailCardComponent,\r\n    ForgetPassEmailSendedComponent,\r\n    SigninFormComponent,\r\n    ImgProfileInputComponent,\r\n    CropperImgComponent,\r\n    UpdatePasswordComponent,\r\n    ResetPasswordComponent,\r\n    AddMemberComponent,\r\n    PhonePipe,\r\n    ProjectMembersModalComponent,\r\n    TableInviteesManagementComponent,\r\n    DeleteProjectModalComponent,\r\n    TaskFormComponent,\r\n    ProjectFormComponent,\r\n    RenameProjectModalComponent,\r\n    DeleteTaskModalComponent,\r\n    InviteMemberModalComponent,\r\n    RemoveMemberModalComponent,\r\n    ChangePermissionModalComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: CustomInterceptor,\r\n      multi: true\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Task } from 'src/app/models/task.model';\r\ndeclare var $: any;\r\n// Services\r\nimport { TaskService } from 'src/app/services/task.service';\r\n\r\n@Component({\r\n  selector: '[app-row-task]',\r\n  templateUrl: './row-task.component.html',\r\n  styleUrls: ['./row-task.component.css']\r\n})\r\nexport class RowTaskComponent implements OnInit {\r\n  @Input() task: Task;\r\n\r\n  constructor(private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  onRemoveTask() {\r\n    this.taskService.setCurrentTask(this.task);\r\n    $('#deleteTaskModal').modal('show');\r\n  }\r\n\r\n  onEditTask() {\r\n    this.taskService.setCurrentTask(this.task);\r\n    $('#addTaskModal').modal('show');\r\n    console.log('task: ', this.task);\r\n  }\r\n\r\n  onStatusChange(status: Task['status']) {\r\n    this.task.status = status;\r\n    this.updateTask();\r\n  }\r\n\r\n  onPriorityChange(priority: Task['priority']) {\r\n    this.task.priority = priority;\r\n    this.updateTask();\r\n  }\r\n\r\n  updateTask() {\r\n    let taskToUpdate: any = Object.assign({}, this.task);\r\n    taskToUpdate.projectID = taskToUpdate.projectID._id;\r\n    taskToUpdate.owner = taskToUpdate.owner._id;\r\n    this.taskService.update(taskToUpdate);\r\n  }\r\n\r\n  getStatusClass(statusTask: Task['status']): string {\r\n    switch (statusTask) {\r\n      case 'on hold':\r\n        return 'status-hold';\r\n      case 'working on it':\r\n        return 'status-working';\r\n      case 'waiting for response':\r\n        return 'status-waiting';\r\n      case 'blocked':\r\n        return 'status-blocked';\r\n      case 'done':\r\n        return 'status-done';\r\n      case 'not started yet':\r\n        return 'status-not-started';\r\n    }\r\n  }\r\n\r\n  getPriorityClass(priorityTask: Task['priority']): string {\r\n    switch (priorityTask) {\r\n      case 'low':\r\n        return 'priority-low';\r\n      case 'medium':\r\n        return 'priority-medium';\r\n      case 'high':\r\n        return 'priority-high';\r\n    }\r\n  }\r\n\r\n}\r\n","<!-- Actions task button -->\r\n<td class=\"actions-task-td\">\r\n  <div class=\"dropdown\">\r\n    <button class=\"btn-actions\" id=\"taskMenu\" role=\"button\" data-toggle=\"dropdown\" aria-expanded=\"false\">\r\n      <img src=\"./assets/three-dots-vertical.svg\" />\r\n    </button>\r\n    <ul class=\"dropdown-menu\" aria-labelledby=\"taskMenu\">\r\n      <li>\r\n        <button class=\"dropdown-item d-flex align-items-center\" type=\"button\" (click)=\"onRemoveTask()\">\r\n          <img class=\"mr-1\" src=\"./assets/trash.svg\" />\r\n          <span>Remove task</span>\r\n        </button>\r\n      </li>\r\n      <li>\r\n        <button class=\"dropdown-item d-flex align-items-center\" type=\"button\" (click)=\"onEditTask()\">\r\n          <img class=\"mr-1\" src=\"./assets/pencil-square.svg\" />\r\n          <span>Edit task</span>\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</td>\r\n<!-- Title task -->\r\n<td class=\"title-task\">{{task.title}}</td>\r\n<!-- Owner task -->\r\n<td class=\"td-owner\">\r\n  <a   *ngIf=\"task.owner; else nonOwner\" [href]=\"'/profile/' + task.owner._id\" \r\n    class=\"d-flex align-items-center justify-content-center\">\r\n    <img class=\"mr-1\" [src]=\"task.owner.imgUrl ? task.owner.imgUrl : './assets/profile.svg' \">\r\n    <p class=\"m-0 p-0\">{{task.owner.fName}} {{task.owner.lName}}</p>\r\n  </a>\r\n  <ng-template #nonOwner>none</ng-template>\r\n</td>\r\n<!-- Status task -->\r\n<td>\r\n  <div class=\"status-drop dropdown\">\r\n    <button class=\"btn-drop\" [ngClass]=\"getStatusClass(task.status)\" type=\"button\" data-toggle=\"dropdown\"\r\n      aria-haspopup=\"true\" aria-expanded=\"false\" data-offset=\"-11,0\">\r\n      {{task.status}}\r\n    </button>\r\n    <div class=\"dropdown-menu status-drop-menu\">\r\n      <button class=\"dropdown-item task-item status-hold\" type=\"button\" (click)=\"onStatusChange('on hold')\">\r\n        On hold\r\n      </button>\r\n      <button class=\"dropdown-item task-item status-working\" type=\"button\" (click)=\"onStatusChange('working on it')\">\r\n        Working on it\r\n      </button>\r\n      <button class=\"dropdown-item task-item status-done\" type=\"button\" (click)=\"onStatusChange('done')\">\r\n        Done\r\n      </button>\r\n      <button class=\"dropdown-item task-item status-waiting\" type=\"button\"\r\n        (click)=\"onStatusChange('waiting for response')\">\r\n        Waiting for response\r\n      </button>\r\n      <button class=\"dropdown-item task-item status-blocked\" type=\"button\" (click)=\"onStatusChange('blocked')\">\r\n        Blocked\r\n      </button>\r\n    </div>\r\n  </div>\r\n</td>\r\n<!-- Priority task -->\r\n<td>\r\n  <div class=\"status-drop dropdown\">\r\n    <button class=\"btn-drop\" [ngClass]=\"getPriorityClass(task.priority)\" type=\"button\" data-toggle=\"dropdown\"\r\n      aria-haspopup=\"true\" aria-expanded=\"false\" data-offset=\"-11,0\">\r\n      {{task.priority}}\r\n    </button>\r\n    <div class=\"dropdown-menu status-drop-menu\">\r\n      <button class=\"dropdown-item task-item priority-low\" type=\"button\" (click)=\"onPriorityChange('low')\">\r\n        Low\r\n      </button>\r\n      <button class=\"dropdown-item task-item priority-medium\" type=\"button\" (click)=\"onPriorityChange('medium')\">\r\n       Medium\r\n      </button>\r\n      <button class=\"dropdown-item task-item priority-high\" type=\"button\" (click)=\"onPriorityChange('high')\">\r\n        High\r\n      </button>\r\n    </div>\r\n  </div>\r\n</td>\r\n<!-- Dates task -->\r\n<td>{{task.startDate | date:'dd/MM/yyyy'}}</td>\r\n<td>{{task.endDate | date:'dd/MM/yyyy'}}</td>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n// Environment variables\r\nimport { environment } from 'src/environments/environment';\r\n// Services\r\nimport { MemberService } from './member.service';\r\nimport { AuthService } from './auth.service';\r\n// Models\r\nimport { Project } from '../models/project.model';\r\nimport { Member } from '../models/member.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  private BASE_URL = environment.baseUrl;\r\n  private endpoint = 'project';\r\n\r\n  private _projects$ = new BehaviorSubject<Project[]>([]);\r\n  public projects$ = this._projects$.asObservable();\r\n\r\n  private _currentProject$ = new BehaviorSubject<Project>(null);\r\n  public currentProject$ = this._currentProject$.asObservable();\r\n\r\n  public errMsg$ = new Subject<any>();\r\n  public successMsg$ = new Subject<any>();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private memberService: MemberService,\r\n    private authService: AuthService) {\r\n    this.loadUserProjects();\r\n  }\r\n\r\n  loadUserProjects() {\r\n    this.authService.loggedUser$.subscribe(async userLogged => {\r\n      const filter = { userID: userLogged._id };\r\n      (await this.memberService.getMembers(filter))\r\n        .pipe(\r\n          map(members => {\r\n            const projects = members.map(member => member.projectID)\r\n            return projects;\r\n          })\r\n        ).subscribe(\r\n          projects => {\r\n            this._projects$.next(projects);\r\n          }, error => { console.error(error) });\r\n    });\r\n  }\r\n\r\n  createProject(data: Project) {\r\n    this.http.post<Project>(`${this.BASE_URL}${this.endpoint}`, data)\r\n      .subscribe(\r\n        createdProject => {\r\n          this._currentProject$.next(createdProject);\r\n          const projects = this._projects$.value;\r\n          this._projects$.next([createdProject, ...projects]);\r\n          this.successMsg$.next('New project created.');\r\n        }, err => {\r\n          console.error(err)\r\n          this.errMsg$.next('We are sorry, we got a problem.\\nPlease try again later.');\r\n        });\r\n  }\r\n\r\n  async getByID(projectID: Project['_id']): Promise<Observable<Project>> {\r\n    return this.http.get<Project>(`${this.BASE_URL}${this.endpoint}/${projectID}`);\r\n  }\r\n\r\n\r\n  removeProject(projectID: Project['_id']) {\r\n    this.http.delete<Project>(`${this.BASE_URL}${this.endpoint}/${projectID}`).subscribe(\r\n      res => {\r\n        this.successMsg$.next('Project successfully deleted.');\r\n      }, error => {\r\n        this.errMsg$.next('Delete project failed, please try again.');\r\n        console.error(error);\r\n      });\r\n  }\r\n\r\n  updateProject(projectToUpdate: Project) {\r\n    this.http.put<Project>(`${this.BASE_URL}${this.endpoint}`, projectToUpdate).subscribe(\r\n      updatedProject => {\r\n        this.setCurrentProject(updatedProject);\r\n        this.successMsg$.next('Project updated successfully');\r\n      }, error => {\r\n        this.errMsg$.next('Sorry we got a problem, please try again later')\r\n        console.error(error);\r\n      })\r\n  }\r\n\r\n  setCurrentProject(project: Project) {\r\n    this._currentProject$.next(project);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\r\nimport { cloudinaryConfig } from '../../configs/cloudinary.config.js';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CloudinaryService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  uploadImg(file) {\r\n    const UPLOAD_URL = cloudinaryConfig.UPLOAD_URL;\r\n    const UPLOAD_PRESET = cloudinaryConfig.UPLOAD_PRESET;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('upload_preset', UPLOAD_PRESET);\r\n    formData.append('folder', 'TaskTeam');\r\n\r\n    return this.http.post<any>(UPLOAD_URL, formData, { reportProgress: true, observe: 'events' });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>nav-bar works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-forget-pass-email-sended',\r\n  templateUrl: './forget-pass-email-sended.component.html',\r\n  styleUrls: ['./forget-pass-email-sended.component.css']\r\n})\r\nexport class ForgetPassEmailSendedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"forget-contain card bg-light\">\r\n\r\n  <header class=\"header-forget card-header\">\r\n    <span class=\"icon-lock\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 23 32\">\r\n        <path fill=\"currentColor\"\r\n          d=\"M19.65,14.425 L19.65,8.125 C19.65,3.782725 16.1157,0.25 11.775,0.25 C7.43115,0.25 3.9,3.782725 3.9,8.125 L3.9,14.425 C2.162775,14.425 0.75,15.8362 0.75,17.575 L0.75,28.6 C0.75,30.337225 2.162775,31.75 3.9,31.75 L19.65,31.75 C21.387225,31.75 22.8,30.337225 22.8,28.6 L22.8,17.575 C22.8,15.8362 21.387225,14.425 19.65,14.425 Z M11.775,25.45 C10.4709,25.45 9.4125,24.3916 9.4125,23.0875 C9.4125,21.7834 10.4709,20.725 11.775,20.725 C13.0791,20.725 14.1375,21.7834 14.1375,23.0875 C14.1375,24.3916 13.0791,25.45 11.775,25.45 Z M16.5,14.425 L7.05,14.425 L7.05,8.125 C7.05,5.51995 9.16995,3.4 11.775,3.4 C14.38005,3.4 16.5,5.51995 16.5,8.125 L16.5,14.425 Z\">\r\n        </path>\r\n      </svg>\r\n    </span>\r\n    <span class=\"header-text font-weight-bold\">\r\n      An email has been sent.\r\n    </span>\r\n  </header>\r\n\r\n  <main class=\"main-forget card-body\">\r\n    <p class=\"m-0 mb-1\">We sent email to you at</p>\r\n    <p class=\"font-weight-bold m-0 mb-1\">lior9631@gmail.com</p>\r\n    <p class=\"m-0\">\r\n      Please follow the instructions in the email to get a new password\r\n    </p>\r\n  </main>\r\n  <footer class=\"card-footer\">\r\n    <a href=\"/signIn\" class=\"card-text\">Return to login</a>\r\n    <span class=\"text-muted\">•</span>\r\n    <a href=\"/forget\">Resend email</a>\r\n  </footer>\r\n\r\n</section>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Subject } from 'rxjs';\r\n// Environment variables\r\nimport { environment } from 'src/environments/environment';\r\n// Models\r\nimport { Task } from '../models/task.model';\r\nimport { Project } from '../models/project.model';\r\nimport { DataProject } from '../models/dataProject.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n  private BASE_URL = environment.baseUrl;\r\n  private endpoint = 'task';\r\n\r\n  private _tasks$ = new BehaviorSubject<Task[]>([]);\r\n  public tasks$ = this._tasks$.asObservable();\r\n\r\n  private _currentTask$ = new Subject<Task>();\r\n  public currentTask$ = this._currentTask$.asObservable();\r\n\r\n  public taskMsg$ = new Subject<string>();\r\n  public taskErr$ = new Subject<string>();\r\n\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  loadTasks(filter: { userID?: string, projectID?: string } = {}) {\r\n    this.http.get<Task[]>(`${this.BASE_URL}${this.endpoint}`, { params: filter }).subscribe(\r\n      tasks => {\r\n        this._tasks$.next(tasks);\r\n\r\n      }, error => {\r\n        console.error(error)\r\n        this.taskErr$.next(error);\r\n      });\r\n  }\r\n\r\n  create(task: Task) {\r\n    this.http.post<Task>(`${this.BASE_URL}${this.endpoint}`, task).subscribe(\r\n      createdTask => {\r\n        this._tasks$.next([createdTask, ...this._tasks$.value])\r\n        this.taskMsg$.next('Task created')\r\n      }, error => {\r\n        console.error(error);\r\n        this.taskErr$.next(error);\r\n      });\r\n  }\r\n\r\n  remove(taskID: Task['_id']) {\r\n    this.http.delete<Task>(`${this.BASE_URL}${this.endpoint}/${taskID}`).subscribe(\r\n      res => {\r\n        // Update tasks\r\n        const tasks = this._tasks$.value.filter(task => task._id != taskID);\r\n        this._tasks$.next(tasks);\r\n        this.taskMsg$.next('Task deleted');\r\n      }, error => {\r\n        console.error(error);\r\n        this.taskErr$.next('Sorry, we got a problem.\\nPlease try again.');\r\n      });\r\n  }\r\n\r\n  update(taskToUpdate: Task) {\r\n    this.http.put<Task>(`${this.BASE_URL}${this.endpoint}`, taskToUpdate).subscribe(\r\n      updatedTask => {\r\n        // Update tasks\r\n        const tasks = this._tasks$.value.map(task => {\r\n          if (task._id != taskToUpdate._id) {\r\n            return task;\r\n          } else { return updatedTask; }\r\n        });\r\n        this._tasks$.next(tasks);\r\n        this.taskMsg$.next('Task updated');\r\n      }, error => {\r\n        console.error(error)\r\n        this.taskErr$.next('Sorry, we got a problem.\\nPlease try again.');\r\n      });\r\n  }\r\n\r\n  getTasksProjectCount(projectID: Project['_id']) {\r\n    return this.http.get<DataProject['countTasks']>(`${this.BASE_URL}${this.endpoint}/countTasks/${projectID}`);\r\n  }\r\n\r\n  setCurrentTask(task: Task) {\r\n    this._currentTask$.next(task);\r\n  }\r\n}\r\n\r\n\r\n","export const cloudinaryConfig = {\r\n  CLOUD_NAME: 'liorapi',\r\n  UPLOAD_URL: `https://api.cloudinary.com/v1_1/liorapi/image/upload`,\r\n  UPLOAD_PRESET: 'apilior'\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\ndeclare var $: any;\n// Models\nimport { Task } from '../../models/task.model';\n// Services\nimport { TaskService } from '../../services/task.service';\n\n@Component({\n  selector: 'app-delete-task-modal',\n  templateUrl: './delete-task-modal.component.html',\n  styleUrls: ['./delete-task-modal.component.css']\n})\nexport class DeleteTaskModalComponent implements OnInit, OnDestroy {\n  task: Task = null;\n\n  successMsg: string = null;\n  errorMsg: string = null;\n\n  isLoading: boolean = false;\n\n  // Subscriptions\n  taskSub: Subscription;\n  successSub: Subscription;\n  errorSub: Subscription;\n\n  constructor(private taskService: TaskService) { }\n\n  ngOnInit(): void {\n    this.successSub = this.taskService.taskMsg$.subscribe(\n      msg => {\n        this.successMsg = msg;\n        this.isLoading = false;\n        $('#deleteTaskModal').modal('hide');\n        this.taskService.setCurrentTask(null);\n      });\n    this.errorSub = this.taskService.taskErr$.subscribe(errMsg => {\n      this.errorMsg = errMsg;\n      this.isLoading = false;\n    });\n\n    this.taskSub = this.taskService.currentTask$.subscribe(currentTask => { this.task = currentTask });\n  }\n\n  ngOnDestroy(): void {\n    this.successSub.unsubscribe();\n    this.errorSub.unsubscribe();\n    this.taskSub.unsubscribe();\n  }\n\n  removeTask() {\n    this.isLoading = true;\n    this.taskService.remove(this.task._id);\n  }\n\n}\n","<div class=\"modal fade\" id=\"deleteTaskModal\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Delete this task?</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span>&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div *ngIf=\"errorMsg\" class=\"alert alert-danger\" role=\"alert\">{{errorMsg}}</div>\n                \n                <p class=\"m-0\">Are you sure you want to delete this task?</p>\n                <p class=\"m-0\">This action cannot be undone</p>\n            </div>\n            <div class=\"modal-footer d-flex\">\n                <button type=\"button\" class=\"btn btn-danger\" (click)=\"removeTask()\" [disabled]=\"isLoading\">\n                    <div *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\">\n                        <span class=\"sr-only\">Loading...</span>\n                    </div>\n                    <span *ngIf=\"isLoading\" class=\"ml-2\">Loading</span>\n                    <span *ngIf=\"!isLoading\">Delete</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" [disabled]=\"isLoading\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { User } from 'src/app/models/user.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: '[app-signin-form]',\r\n  templateUrl: './signin-form.component.html',\r\n  styleUrls: ['./signin-form.component.css']\r\n})\r\nexport class SigninFormComponent implements OnInit, OnDestroy {\r\n  userLoggedIn: User = null;\r\n\r\n  // Subscriptions\r\n  loggedSub: Subscription;\r\n  errSub: Subscription;\r\n\r\n  // Error\r\n  errMsg: string = null;\r\n\r\n  isLoading = false;\r\n\r\n  isWasSubmit = false;\r\n  logIn = new FormGroup({});\r\n  constructor(private fb: FormBuilder, private authService: AuthService, private router: Router) {\r\n    this.logIn = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email, Validators.pattern('^[a-zA-Z][a-zA-Z0-9-_]+@[a-zA-Z]+(\\\\.[a-zA-Z]{2,3})+$')]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loggedSub = this.authService.loggedUser$.subscribe(user => {\r\n      this.userLoggedIn = user;\r\n      if (user) {\r\n        this.router.navigate(['/projects']);\r\n      }\r\n    });\r\n\r\n\r\n    this.errSub = this.authService.errAuth$.subscribe(\r\n      err => {\r\n        this.isLoading = false;\r\n        this.errMsg = err.msg;\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.loggedSub.unsubscribe();\r\n    this.errSub.unsubscribe();\r\n  }\r\n\r\n  // Getter form-controls\r\n  get fc() { return this.logIn.controls; }\r\n\r\n  isIncorrectData(): string {\r\n    return this.errMsg;\r\n  }\r\n\r\n  onLogin(): void {\r\n    this.isWasSubmit = true;\r\n    this.errMsg = null;\r\n\r\n    if (this.logIn.status === 'VALID') {\r\n      this.isLoading = true;\r\n      const { email, password } = this.logIn.value;\r\n      this.authService.login(email, password);\r\n    }\r\n  }\r\n\r\n  GetValidationClass(inputName: string): string {\r\n    if (!this.isWasSubmit) {\r\n      return '';\r\n    } else if (this.logIn.controls[inputName].errors || this.errMsg) {\r\n      return 'is-invalid';\r\n    } else {\r\n      return 'is-valid';\r\n    }\r\n  }\r\n\r\n}\r\n","<form novalidate [formGroup]=\"logIn\" (ngSubmit)=\"onLogin()\">\r\n\r\n  <!-- Error massage 'Incorrect password or username' -->\r\n  <div class=\"alert alert-danger\" *ngIf=\"errMsg\">{{errMsg}}</div>\r\n\r\n  <!-- Password email -->\r\n  <div class=\"form-group\">\r\n    <input type=\"email\" class=\"form-control\" placeholder=\"Email\" formControlName=\"email\" autocomplete=\"on\"\r\n      [ngClass]=\"GetValidationClass('email')\" />\r\n\r\n    <div class=\"invalid-feedback\">\r\n      <div *ngIf=\"fc.email.errors?.required\">Email is required</div>\r\n      <div *ngIf=\"!errMsg && fc.email.errors?.email\">\r\n        <p class=\"m-0\">Please enter a valid email.</p>\r\n        <p class=\"m-0\">e.g example@mail.com</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Password input -->\r\n  <div class=\"form-group\">\r\n    <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" autocomplete=\"off\"\r\n      [ngClass]=\"GetValidationClass('password')\" />\r\n\r\n    <div class=\"invalid-feedback\">\r\n      <div *ngIf=\"fc.password.errors?.required\">Password is required</div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Button submit -->\r\n  <div class=\"row\">\r\n    <button id=\"btn\" type=\"submit\" class=\"btn btn-primary mx-auto col-10\" [disabled]=\"isLoading\">\r\n      <span *ngIf=\"!isLoading\">Login</span>\r\n      <span *ngIf=\"isLoading\">\r\n        <div class=\"spinner-border spinner-border-sm\" role=\"status\"></div>\r\n        <span> Loading...</span>\r\n      </span>\r\n    </button>\r\n  </div>\r\n</form>\r\n<footer>\r\n  <div class=\"row justify-content-center mt-3\">\r\n    <p class=\"mr-3\">Forget your password?</p>\r\n    <a href=\"/forget\">Reset your password</a>\r\n  </div>\r\n  <div class=\"row justify-content-center align-items-center mt-3\">\r\n    <p class=\"my-0 mr-4\">Don't have an account?</p>\r\n    <a class=\"btn btn-outline-success\" href=\"/signup\">Sign-Up Free!</a>\r\n  </div>\r\n</footer>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n// Imports rxjs\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { Subject } from 'rxjs';\r\n// Services\r\nimport { StorageService } from './storage.service';\r\n// Models\r\nimport { User } from '../models/user.model';\r\n// Environment variables\r\nimport { environment } from '../../environments/environment';\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private key = 'user';\r\n  private END_POINT = 'auth/';\r\n  private BASE_URL = environment.baseUrl;\r\n  // tslint:disable-next-line: variable-name\r\n  private _loggedUser$ = new BehaviorSubject<User>(this._loadLoggedUser());\r\n  public loggedUser$ = this._loggedUser$.asObservable();\r\n\r\n  public errAuth$ = new Subject<any>();\r\n\r\n  constructor(private http: HttpClient, private storage: StorageService) { }\r\n\r\n  private _loadLoggedUser() {\r\n    const loggedUser = this.storage.load(this.key) || null;\r\n    return loggedUser;\r\n  }\r\n\r\n\r\n  login(email: string, password: string) {\r\n    const data = { email, password };\r\n    this.http.post<User>(`${this.BASE_URL}${this.END_POINT}/login`, data, { withCredentials: true })\r\n      .subscribe(\r\n        loggedUser => {\r\n          this.storage.store(this.key, loggedUser);\r\n          this._loggedUser$.next(loggedUser);\r\n        },\r\n        error => {\r\n          if (Array.isArray(error.error)) {\r\n            error = error.error[0];\r\n          } else {\r\n            console.error(error);\r\n            error = {\r\n              location: 'body',\r\n              msg: 'We are sorry, we got a problem.\\nPlease try again.',\r\n              param: 'unknown',\r\n            };\r\n          }\r\n          this.errAuth$.next(error);\r\n        });\r\n  }\r\n\r\n  signUp(user: User) {\r\n    this.http.post<User>(`${this.BASE_URL}${this.END_POINT}/signup`, user).subscribe(\r\n      loggedUser => {\r\n        this.storage.store(this.key, loggedUser);\r\n        this._loggedUser$.next(loggedUser);\r\n      },\r\n      error => {\r\n        if (Array.isArray(error.error)) {\r\n          error = error.error[0];\r\n        } else {\r\n          console.error(error);\r\n          error = {\r\n            location: 'body',\r\n            msg: 'We are sorry, we got a problem.\\nPlease try again.',\r\n            param: 'unknown',\r\n          };\r\n        }\r\n        this.errAuth$.next(error);\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    this.http.get(`${this.BASE_URL}/${this.END_POINT}/logout`);\r\n    this.storage.remove(this.key);\r\n    this._loggedUser$.next(null);\r\n  }\r\n\r\n  updateUserLogged(userUpdate) {\r\n    this.storage.store(this.key, userUpdate);\r\n    this._loggedUser$.next(userUpdate);\r\n  }\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\nexport function ConfirmedValidator(controlName: string, matchingControlName: string) {\r\n  return (formGroup: FormGroup) => {\r\n    const control = formGroup.controls[controlName];\r\n    const matchingControl = formGroup.controls[matchingControlName];\r\n    if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n      return;\r\n    }\r\n    if (control.value !== matchingControl.value) {\r\n      matchingControl.setErrors({ confirmedValidator: true });\r\n    } else {\r\n      matchingControl.setErrors(null);\r\n    }\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StorageService {\r\n\r\n  constructor() { }\r\n\r\n  store(key: string, value) {\r\n    localStorage.setItem(key, JSON.stringify(value) || null);\r\n  }\r\n\r\n  load(key: string) {\r\n    const data = localStorage.getItem(key);\r\n    return (data) ? JSON.parse(data) : undefined;\r\n  }\r\n\r\n  remove(key: string) {\r\n    localStorage.removeItem(key);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { map, take, takeLast } from 'rxjs/operators';\r\nimport { Task } from 'src/app/models/task.model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { TaskService } from 'src/app/services/task.service';\r\n\r\n@Component({\r\n  selector: 'app-current-tasks',\r\n  templateUrl: './current-tasks.component.html',\r\n  styleUrls: ['./current-tasks.component.css']\r\n})\r\nexport class CurrentTasksComponent implements OnInit {\r\n  projects: { projectName: string, tasks: Task[] }[] = null;\r\n\r\n\r\n  isCollapse = true; // If the table-task collapse\r\n\r\n  isLoading = true;\r\n\r\n  constructor(private authService: AuthService, private taskService: TaskService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.loggedUser$.pipe(take(1)).subscribe(user => {\r\n      this.taskService.loadTasks({ userID: user._id });\r\n    });\r\n\r\n    this.taskService.tasks$.pipe(\r\n      take(2),\r\n      map(tasks => {\r\n        // Create map tasks by project name\r\n        let mapTasks = this.mapsTasks(tasks);\r\n        // Convert \"tasksMap\" to array of objects by model {projectName:string, tasks:Task[]}\r\n        const projectsWithTasks = $.map(mapTasks, (tasks, projectName) => ({ projectName, tasks }));\r\n        return projectsWithTasks;\r\n      })\r\n    ).subscribe((projects) => {\r\n      if (this.projects) this.isLoading = false;\r\n      this.projects = projects;\r\n    })\r\n  }\r\n\r\n  /** Scroll the screen to the tasks-table when it opens */\r\n  scrollToTable(idTable: string): void {\r\n    console.log({ idTable: '#table' + idTable });\r\n\r\n    this.isCollapse = !this.isCollapse;\r\n    // If the tasks-table is close end the function\r\n    if (this.isCollapse) { return; }\r\n\r\n    setTimeout(() => {\r\n      // Get element tasks-table\r\n      const tableEl = document.querySelector('#table' + idTable);\r\n      // Scroll the window  to the tasks-table\r\n      tableEl.scrollIntoView({ block: 'start', behavior: 'smooth', inline: 'nearest' });\r\n    }, 300);\r\n  }\r\n\r\n  // Maps the tasks by project names\r\n  mapsTasks(tasks: Task[]) {\r\n    let mapTasks = {};\r\n    tasks.forEach(task => {\r\n      if (!(task.projectID.title in mapTasks)) {\r\n        mapTasks[task.projectID.title] = [];\r\n      }\r\n      mapTasks[task.projectID.title].push(task)\r\n    });\r\n    return mapTasks;\r\n  }\r\n}\r\n","<div class=\"layout-main\">\r\n\r\n  <app-menu-login></app-menu-login>\r\n\r\n  <main class=\"current-tasks\">\r\n    <div class=\"container\">\r\n\r\n      <h1 class=\"header-page mx-0 my-3 p-0 \">Current tasks</h1>\r\n\r\n      <!-- When the data is loaded -->\r\n      <section *ngIf=\"isLoading\" class=\"d-flex align-items-center\">\r\n        <div class=\"spinner-border\" style=\"width: 1.5rem; height: 1.5rem;\" role=\"status\"></div>\r\n        <p class=\"h3 ml-1\">Loading, please wait...</p>\r\n      </section>\r\n\r\n      <!--when the data has finished loading and there are no projects -->\r\n      <section *ngIf=\"!isLoading && projects && !projects.length\">\r\n        <div class=\"h2 mx-0 my-3 p-0 \">You have no tasks</div>\r\n      </section>\r\n\r\n      <!-- tables project (If have...)  -->\r\n      <section *ngIf=\"projects && projects.length;\" class=\"tables-tasks-contain\">\r\n        <div *ngFor=\"let project of projects; let i = index;\" class=\"table-contain\" [id]=\"'table'+i\">\r\n          <!-- Button collapse of table-tasks  -->\r\n          <button class=\"btn-table btn btn-dark btn-block dropdown-toggle\" data-toggle=\"collapse\"\r\n            [attr.data-target]=\"'#collapse'+i\" (click)=\"scrollToTable(project.projectName)\">\r\n            {{project.projectName}}\r\n          </button>\r\n          <div class=\"collapse\" [id]=\"'collapse'+i\">\r\n            <!-- Table tasks -->\r\n            <div class=\"card card-body\">\r\n              <app-table-tasks [tasks]=\"project.tasks\"></app-table-tasks>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n    \r\n    <!-- Modal \"Add-task\" -->\r\n    <add-task-modal></add-task-modal>\r\n  </main>","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as $ from 'jquery';\n// Services\nimport { ProjectService } from 'src/app/services/project.service';\n// Models\nimport { Project } from 'src/app/models/project.model';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-project-form',\n  templateUrl: './project-form.component.html',\n  styleUrls: ['./project-form.component.css']\n})\nexport class ProjectFormComponent implements OnInit, OnDestroy {\n  @Output() closeModalEv: EventEmitter<any> = new EventEmitter();\n\n  projectFrom = new FormGroup({});\n\n  isLoading = false;\n  isUpdating = false;\n  isWasSubmit = false;\n\n  @Input() project: Project = null;\n\n  // Subscriptions\n  projectSub: Subscription;\n\n  constructor(\n    private projectService: ProjectService,\n    private fb: FormBuilder,\n  ) {\n    this.projectFrom = this.fb.group({\n      title: ['', Validators.required],\n      description: ['']\n    })\n  }\n\n  ngOnInit(): void {\n    this.projectSub = this.projectService.currentProject$.subscribe(\n      project => {\n        if (this.isLoading) this.isLoading = false;\n        if (this.isUpdating) {\n          this.isUpdating = false;\n          this.closeModalEv.emit();\n        }\n      });\n\n    if (this.project) {\n      this.projectFrom.patchValue({ title: this.project.title, description: this.project.description });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.projectSub.unsubscribe();\n  }\n  // Get form-control\n  get fc() {\n    return this.projectFrom.controls;\n  }\n\n  onSubmit() {\n    this.isWasSubmit = true;\n    this.projectService.errMsg$.next(null)\n    $('.project-form input').removeClass('is-invalid');\n\n    if (this.projectFrom.status === 'VALID') {\n      this.isLoading = true;\n\n      const dataForm = this.projectFrom.value;\n\n      if (!this.project) { // If there is still no project\n        this.projectService.createProject(dataForm);\n      } else { // If have a project...\n        this.isUpdating = true;\n        this.projectService.currentProject$.pipe(take(1)).subscribe(\n          currProject => {\n            // Update current project\n            currProject.title = dataForm.title;\n            currProject.description = dataForm.description;\n            this.projectService.updateProject(currProject);\n          });\n      }\n    }\n  }\n\n  GetValidationClass(inputName: string) {\n    if (!this.isWasSubmit) {\n      return '';\n    } else if (this.projectFrom.controls[inputName].errors) {\n      return 'is-invalid';\n    } else {\n      return 'is-valid';\n    }\n  }\n\n}\n","<form class=\"project-form\" novalidate [formGroup]=\"projectFrom\" (ngSubmit)=\"onSubmit()\">\n    <!-- Title / Project name -->\n    <div class=\"form-group\">\n        <label for=\"title\">Project name:</label>\n        <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Enter a name project\" formControlName=\"title\"\n            [ngClass]=\"GetValidationClass('title')\" required />\n        <!-- Invalid massage -->\n        <div class=\"invalid-feedback\">\n            <p *ngIf=\"fc.title.errors\">Please enter name to your project.</p>\n        </div>\n    </div>\n\n    <!-- Project description -->\n    <div class=\"form-group\">\n        <label for=\"description\">Project description:</label>\n        <small>(*Optional)</small>\n        <textarea name=\"description\" class=\"form-control\" id=\"description\" cols=\"30\" rows=\"2\"\n            placeholder=\"Add description to your project\" formControlName=\"description\"\n            [ngClass]=\"GetValidationClass('description')\"></textarea>\n    </div>\n\n    <!-- If create new project -->\n    <div *ngIf=\"!project\" class=\"form-group\">\n        <button class=\"btn btn-lg btn-primary btn-block\" [disabled]=\"isLoading\">\n            <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm mr-1\" role=\"status\"></span>\n            Create project\n        </button>\n    </div>\n\n    <!-- If update project -->\n    <div *ngIf=\"project\" class=\"form-group d-flex\">\n        <button class=\"btn btn-lg btn-primary mr-2\" [disabled]=\"isLoading\">\n            <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm mr-1\" role=\"status\"></span>\n            Update\n        </button>\n        <button class=\"btn btn-lg btn-secondary\" [disabled]=\"isLoading\" data-dismiss=\"modal\">\n            Cancel\n        </button>\n    </div>\n\n</form>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport * as $ from 'jquery';\r\n// Services\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n// Models\r\nimport { User } from 'src/app/models/user.model';\r\n// Validators\r\nimport { ConfirmedValidator } from '../../validators/confirmed.validator';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit, OnDestroy {\r\n  signUp = new FormGroup({});\r\n\r\n  isWasSubmit = false;\r\n  isLoading = false;\r\n\r\n  // Subscriptions\r\n  errSub: Subscription;\r\n  userLoggedSub: Subscription;\r\n\r\n  // Form massages\r\n  emailUseMsg: string = null;\r\n  errMsg: string = null;\r\n  successMsg: string = null;\r\n\r\n  // Profile image\r\n  imgUrl: string = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n  ) {\r\n    this.signUp = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email,\r\n      Validators.pattern('^[a-zA-Z][a-zA-Z0-9-_]+@[a-zA-Z]+(\\\\.[a-zA-Z]{2,3})+$')]],\r\n      fName: ['', [Validators.required, Validators.pattern('^[A-Z][a-z]+$')]],\r\n      lName: ['', [Validators.required, Validators.pattern('^[A-Z][a-z]+\\( [A-Z][a-z]+\\)*$')]],\r\n      phone: ['', [Validators.required, Validators.pattern('^0[1-9][0-9]{7,8}$')]],\r\n      title: ['', [Validators.required]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      passconfrim: ['', [Validators.required]],\r\n    }, {\r\n      validator: ConfirmedValidator('password', 'passconfrim'),\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.errSub = this.authService.errAuth$.subscribe(err => {\r\n      if (err.param === 'email') {\r\n        this.emailUseMsg = err.msg;\r\n      } else {\r\n        this.errMsg = err.msg;\r\n      }\r\n      this.isLoading = false;\r\n    });\r\n\r\n    this.userLoggedSub = this.authService.loggedUser$.subscribe(user => {\r\n      if (user) {\r\n        this.isLoading = false;\r\n        this.router.navigate(['/']);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.errSub.unsubscribe();\r\n    this.userLoggedSub.unsubscribe();\r\n  }\r\n\r\n  // Getter form-controls\r\n  get fc() {\r\n    return this.signUp.controls;\r\n  }\r\n\r\n  onSignUp = () => {\r\n    if (this.errMsg) {\r\n      this.errMsg = null;\r\n    }\r\n    if (this.emailUseMsg) {\r\n      this.emailUseMsg = null;\r\n    }\r\n\r\n    if (this.signUp.status === 'VALID') {\r\n      this.isLoading = true;\r\n      const user: User = this.signUp.value;\r\n      user.imgUrl = this.imgUrl;\r\n      this.authService.signUp(user);\r\n    } else {\r\n      this.isWasSubmit = true;\r\n    }\r\n  }\r\n\r\n  GetValidationClass(inputName: string) {\r\n    if (!this.isWasSubmit) {\r\n      return '';\r\n    } else if (this.signUp.controls[inputName].errors) {\r\n      return 'is-invalid';\r\n    } else {\r\n      return 'is-valid';\r\n    }\r\n  }\r\n\r\n  onGotImgUrl(imgUrl: string) {\r\n    this.imgUrl = imgUrl;\r\n    $('.collapse').removeClass('show');\r\n  }\r\n\r\n}\r\n","<section class=\"container\">\r\n  <header>\r\n    <a href='/'>\r\n      <img src=\"../../../assets/logo.png\" alt=\"\">\r\n    </a>\r\n  </header>\r\n  <div class=\"h1\">Join us</div>\r\n  <form novalidate [formGroup]=\"signUp\" (ngSubmit)=\"onSignUp()\">\r\n\r\n    <!-- Error massage -->\r\n    <div *ngIf=\"errMsg\" class=\"alert alert-danger\">{{errMsg}}</div>\r\n    <!-- Successfully massage-->\r\n    <div *ngIf=\"successMsg\" class=\"alert alert-danger\">{{successMsg}}</div>\r\n\r\n    <div class=\"form-group\">\r\n      <button class=\"btn-profile-img\" type=\"button\" data-toggle=\"collapse\" data-target=\"#imgProfileInput\">\r\n        <img [src]=\" imgUrl? imgUrl: '../../../assets/addImg.jpg'\" alt=\"Avatar\" />\r\n      </button>\r\n      <div class=\"collapse mt-2\" id=\"imgProfileInput\">\r\n        <app-img-profile-input (passImgUrl)=\"onGotImgUrl($event)\"></app-img-profile-input>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <input type=\"email\" class=\"form-control\" [ngClass]=\"GetValidationClass('email')\" [class.is-invalid]=\"emailUseMsg\"\r\n        placeholder=\"Email\" formControlName=\"email\" required />\r\n\r\n      <div class=\"invalid-feedback\">\r\n        <div *ngIf=\"fc.email.errors?.required\"> Please enter an email</div>\r\n        <div *ngIf=\"fc.email.errors?.email || fc.email.errors?.pattern\">Please enter a valid email. Example\r\n          example@mail.com</div>\r\n        <div *ngIf=\"emailUseMsg\">{{emailUseMsg}}</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <input type=\"text\" class=\"form-control\" [ngClass]=\"GetValidationClass('phone')\" placeholder=\"Number phone\"\r\n        formControlName=\"phone\" required />\r\n\r\n      <div class=\"invalid-feedback\">\r\n        <div *ngIf=\"fc.phone.errors?.required\"> Please enter an number phone</div>\r\n        <div *ngIf=\"fc.phone.errors?.pattern\">Please enter a valid Number phone. Example\r\n          0XXX XXX XXX</div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <input type=\"text\" class=\"form-control\" [ngClass]=\"GetValidationClass('title')\" placeholder=\"What is your job?\"\r\n        formControlName=\"title\" required />\r\n\r\n      <div class=\"invalid-feedback\">\r\n        <div *ngIf=\"fc.title.errors?.required\"> Please write what is your job</div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <div class=\"form-group form-row\">\r\n      <div class=\"col\">\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"First name\" formControlName=\"fName\"\r\n          [ngClass]=\"GetValidationClass('fName')\" />\r\n\r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"fc.fName.errors?.required\">Please enter a first name</div>\r\n          <div *ngIf=\"fc.fName.errors?.pattern\">\r\n            A first name should have a capital letter at the beginning and only with letters\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col\">\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Last name\" formControlName=\"lName\"\r\n          [ngClass]=\"GetValidationClass('lName')\" />\r\n\r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"fc.lName.errors?.required\">Please enter a last name</div>\r\n          <div *ngIf=\"fc.lName.errors?.pattern\">\r\n            A last name should have a capital letter at the beginning of a name and only with letters and spaces\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group form-row\">\r\n      <div class=\"col\">\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\"\r\n          [ngClass]=\"GetValidationClass('password')\" />\r\n\r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"fc.password.errors?.required\">Please enter a password</div>\r\n          <div *ngIf=\"fc.password.errors?.minlength\">Password must be at least 8 characters long</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col\">\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" formControlName=\"passconfrim\"\r\n          [ngClass]=\"GetValidationClass('passconfrim')\" />\r\n\r\n        <div class=\"invalid-feedback\">\r\n          <div *ngIf=\"fc.passconfrim.errors?.required\">Please enter a confirm password</div>\r\n          <div *ngIf=\"fc.passconfrim.errors?.confirmedValidator\">Password and Confirm Password must be match</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div class=\"form-group form-row\">\r\n      <div class=\"col text-center\">\r\n        <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"isLoading\">\r\n          <span *ngIf=\"isLoading\" class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n\r\n          <span *ngIf=\"!isLoading; else loading\">Sign Up</span>\r\n          <ng-template #loading> Loading...</ng-template>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</section>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Imports rxjs\r\nimport { BehaviorSubject } from 'rxjs/internal/BehaviorSubject';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n// Environment variables\r\nimport { environment } from '../../environments/environment';\r\n\r\n// Import model\r\nimport { User } from '../models/user.model';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n  private endpoint = 'user';\r\n  private BASE_URL = environment.baseUrl;\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private _users$ = new BehaviorSubject<User[]>([]);\r\n  public users$ = this._users$.asObservable();\r\n\r\n  public errUser$ = new Subject<any>();\r\n  public successMsg$ = new Subject<{ param, msg }>();\r\n\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  loadUsers() {\r\n    this.http.get<User[]>(this.BASE_URL + this.endpoint)\r\n      .subscribe(users => {\r\n        this._users$.next(users);\r\n      },\r\n        error => {\r\n          console.error(error);\r\n        });\r\n  }\r\n\r\n  async getByID(userID: string): Promise<Observable<User>> {\r\n    return this.http.get<User>(`${this.BASE_URL}${this.endpoint}/${userID}`);\r\n  }\r\n\r\n  update(user: User) {\r\n    this.http.put<User>(this.BASE_URL + this.endpoint, user)\r\n      .subscribe(\r\n        userUpdated => {\r\n          this.auth.updateUserLogged(userUpdated);\r\n          this.successMsg$.next({\r\n            param: 'update',\r\n            msg: 'User details updated successfully.'\r\n          }\r\n          );\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          if (Array.isArray(error.error)) {\r\n            error = error.error[0];\r\n          } else {\r\n            console.error(error);\r\n            error = {\r\n              msg: 'We are sorry, we got a problem.\\nPlease try again.',\r\n              param: 'unknown',\r\n            };\r\n          }\r\n          this.errUser$.next(error);\r\n        });\r\n  }\r\n\r\n  updatePassword(oldPass: string, newPass: string, confirmPass: string) {\r\n    const data = { oldPass, newPass, confirmPass };\r\n\r\n    this.http.patch(`${this.BASE_URL}${this.endpoint}/updatePass`, data).subscribe(\r\n      res => {\r\n        this.successMsg$.next({\r\n          param: 'password',\r\n          msg: 'Password updated successfully'\r\n        });\r\n      }, err => {\r\n        if (Array.isArray(err.error)) {\r\n          err = err.error[0];\r\n        } else {\r\n          console.error(err);\r\n          err = {\r\n            param: 'Change',\r\n            msg: 'Password updated failed. \\nPlease try again.'\r\n          };\r\n        }\r\n        this.errUser$.next(err);\r\n      });\r\n  }\r\n} // END CLASS\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Resolve, Router } from '@angular/router';\r\n// Models\r\nimport { User } from 'src/app/models/user.model';\r\n// Services\r\nimport { UserService } from '../user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileResolveService implements Resolve<any> {\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  async resolve(route: ActivatedRouteSnapshot) {\r\n    const { userID } = route.params;\r\n\r\n    if (!userID) {\r\n      this.router.navigateByUrl('/notfound');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const user: User = await (await this.userService.getByID(userID)).toPromise();\r\n      if (!user) this.router.navigateByUrl('/notfound');\r\n\r\n      return user;\r\n    } catch (err) {\r\n      console.error(err);\r\n      this.router.navigateByUrl('/notfound');\r\n    }\r\n  }\r\n}\r\n","import { Component, ɵSWITCH_IVY_ENABLED__POST_R3__ } from '@angular/core';\nimport { take } from 'rxjs/operators';\n// Modles\nimport { Member } from 'src/app/models/member.model';\nimport { User } from 'src/app/models/user.model';\n// Services\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-invite-member-modal',\n  templateUrl: './invite-member-modal.component.html',\n  styleUrls: ['./invite-member-modal.component.css']\n})\nexport class InviteMemberModalComponent {\n  constructor() { }\n\n\n\n}\n","<div class=\"modal fade\" id=\"inviteMemberModal\" role=\"dialog\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Delete this task?</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span>&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <app-add-member></app-add-member>\n                <app-table-invitees-management></app-table-invitees-management>\n\n            </div>\n            <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ViewChild, Input, AfterViewInit, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport Cropper from 'cropperjs';\r\n\r\nimport { CloudinaryService } from '../../services/cloudinary.service';\r\nimport { HttpEventType } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-cropper-img',\r\n  templateUrl: './cropper-img.component.html',\r\n  styleUrls: ['./cropper-img.component.css']\r\n})\r\nexport class CropperImgComponent implements OnInit, AfterViewInit {\r\n\r\n  @ViewChild('image', { static: false })\r\n  imageElement: ElementRef;\r\n  // tslint:disable-next-line: no-input-rename\r\n  @Input('src') imageSource: string;\r\n\r\n  @Output() passImgUrl: EventEmitter<string> = new EventEmitter();\r\n\r\n  cropper: Cropper;\r\n\r\n  progressUpload = 0;\r\n  isUpload = false;\r\n  imageDestination = null;\r\n  urlImg: string = null;\r\n\r\n  progressLoadSub: Subscription;\r\n\r\n\r\n  constructor(private cloudinary: CloudinaryService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.createCropper();\r\n  }\r\n\r\n  onUpload() {\r\n    this.isUpload = true;\r\n    this.progressLoadSub = this.cloudinary.uploadImg(this.imageDestination).subscribe(\r\n      event => {\r\n        if (event.type === HttpEventType.UploadProgress) {\r\n          this.progressUpload = Math.round(event.loaded / event.total * 100);\r\n        } else if (event.type === HttpEventType.Response) {\r\n          this.urlImg = event.body.url;\r\n          this.passImgUrl.emit(this.urlImg);\r\n          this.isUpload = false;\r\n          this.progressLoadSub.unsubscribe();\r\n        }\r\n      }, error => {\r\n        console.error(error);\r\n        this.isUpload = false;\r\n      });\r\n  }\r\n\r\n  createCropper() {\r\n    this.cropper = new Cropper(this.imageElement.nativeElement, {\r\n      zoomable: false,\r\n      scalable: false,\r\n      aspectRatio: 1,\r\n      crop: () => {\r\n        const canvas = this.cropper.getCroppedCanvas({\r\n          width: 600,\r\n          height: 600,\r\n          minWidth: 300,\r\n          minHeight: 300,\r\n          maxWidth: 2000,\r\n          maxHeight: 2000,\r\n          imageSmoothingEnabled: true,\r\n          imageSmoothingQuality: 'low',\r\n        });\r\n        this.imageDestination = canvas.toDataURL('image/jpeg');\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<!-- https://www.thepolyglotdeveloper.com/2019/06/image-cropping-zooming-scaling-angular-javascript/ -->\r\n<!-- https://www.youtube.com/watch?v=oERQcX_0OLA&feature=emb_logo&ab_channel=ThePolyglotDeveloper -->\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-7\">\r\n    <img #image [src]=\"imageSource\" crossorigin style=\"width:auto; max-width:300px\">\r\n  </div>\r\n  <div class=\"col-4\">\r\n    <img [src]=\"imageDestination\" class=\"img-preview\">\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row align-items-center mt-3\">\r\n  <!-- Button upload -->\r\n  <button class=\"btn btn-success ml-3\" type=\"submit\" (click)=\"onUpload();  $event.preventDefault();\"\r\n    [disabled]=\"isUpload\">Upload</button>\r\n\r\n  <!-- Loading bar -->\r\n  <div *ngIf=\"isUpload\" class=\"progress ml-2\" style=\"width: 200px\">\r\n    <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuemin=\"0\"\r\n      aria-valuemax=\"100\" [ngStyle]=\"{'width.%': progressUpload}\">\r\n      {{progressUpload}}%\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'phone'\r\n})\r\nexport class PhonePipe implements PipeTransform {\r\n\r\n  transform(phoneNum: string,): string {\r\n    const secondChar = phoneNum.charAt(1);\r\n    let formatPhone = '';\r\n\r\n    formatPhone += (secondChar === '5') || (secondChar === '7')\r\n      ? formatPhone += phoneNum.substr(0, 3)\r\n      : formatPhone += phoneNum.substr(0, 2);\r\n\r\n    formatPhone += '-' + phoneNum.substr(3, 3) + '-' + phoneNum.substr(6)\r\n    return formatPhone;\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.http.get('localhost:3030/404').subscribe(err => console.error(err));\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n","<h1 class=\"title\">404</h1>\r\n<p>Page not found</p>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n// Pages\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { SignUpComponent } from './pages/sign-up/sign-up.component';\r\nimport { CurrentTasksComponent } from './pages/current-tasks/current-tasks.component';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { MyProjectsComponent } from './pages/my-projects/my-projects.component';\r\nimport { OneProjectComponent } from './pages/one-project/one-project.component';\r\nimport { ProfileComponent } from './pages/profile/profile.component';\r\nimport { CreateProjectComponent } from './pages/create-project/create-project.component';\r\nimport { SettingComponent } from './pages/setting/setting.component';\r\nimport { ForgetPasswordComponent } from './pages/forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './pages/reset-password/reset-password.component';\r\n// Guards\r\nimport { AuthGuard } from './services/auth.guard';\r\n// Resolves\r\nimport { ProfileResolveService } from './services/resolves/profile.resolve.service';\r\nimport { OneProjectResolveService } from './services/resolves/one-project.resolve.service';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    component: HomePageComponent\r\n  },\r\n  {\r\n    path: 'tasks',\r\n    pathMatch: 'full',\r\n    canActivate: [AuthGuard],\r\n    component: CurrentTasksComponent\r\n  },\r\n  {\r\n    path: 'projects',\r\n    pathMatch: 'full',\r\n    canActivate: [AuthGuard],\r\n    component: MyProjectsComponent\r\n  },\r\n  {\r\n    path: 'project/:projectID',\r\n    pathMatch: 'full',\r\n    canActivate: [AuthGuard],\r\n    resolve: { project: OneProjectResolveService },\r\n    component: OneProjectComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    pathMatch: 'full',\r\n    component: SignUpComponent\r\n  },\r\n  {\r\n    path: 'profile/:userID',\r\n    pathMatch: 'full',\r\n    resolve: { user: ProfileResolveService },\r\n    component: ProfileComponent\r\n  },\r\n  {\r\n    path: 'createProject',\r\n    pathMatch: 'full',\r\n    canActivate: [AuthGuard],\r\n    component: CreateProjectComponent\r\n  },\r\n  {\r\n    path: 'setting',\r\n    pathMatch: 'full',\r\n    canActivate: [AuthGuard],\r\n    component: SettingComponent\r\n  },\r\n  {\r\n    path: 'forget',\r\n    pathMatch: 'full',\r\n    component: ForgetPasswordComponent\r\n  },\r\n  {\r\n    path: 'reset',\r\n    pathMatch: 'full',\r\n    component: ResetPasswordComponent\r\n  },\r\n  {\r\n    path: 'notfound',\r\n    pathMatch: 'full',\r\n    component: NotFoundComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    pathMatch: 'full',\r\n    component: NotFoundComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: '[app-project-row]',\r\n  templateUrl: './project-row.component.html',\r\n  styleUrls: ['./project-row.component.css']\r\n})\r\nexport class ProjectRowComponent implements OnInit {\r\n  @Input() project;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<td>{{project.name}}</td>\r\n<td>{{project.Progress}}</td>\r\n<td>{{project.RemainTasks}}</td>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { cloudinaryConfig } from '../../configs/cloudinary.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CustomInterceptor implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // tslint:disable-next-line: curly\r\n    if (request.url === cloudinaryConfig.UPLOAD_URL) return next.handle(request);\r\n\r\n    const copiedReq = request.clone({ withCredentials: true });\r\n    return next.handle(copiedReq);\r\n  }\r\n}\r\n"]}